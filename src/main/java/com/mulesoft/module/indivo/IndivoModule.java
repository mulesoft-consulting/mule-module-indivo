/**
 * Mule Development Kit
 * Copyright 2010-2011 (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was automatically generated by the Mule Development Kit
 */
package com.mulesoft.module.indivo;

import java.io.IOException;
import java.io.InputStream;

import javax.ws.rs.core.MediaType;

import org.json.simple.JSONObject;
import org.json.simple.JSONValue;
import org.mule.api.annotations.Configurable;
import org.mule.api.annotations.Connector;
import org.mule.api.annotations.Processor;
import org.mule.api.annotations.oauth.OAuth;
import org.mule.api.annotations.oauth.OAuthAccessToken;
import org.mule.api.annotations.oauth.OAuthAccessTokenSecret;
import org.mule.api.annotations.oauth.OAuthAuthorizationParameter;
import org.mule.api.annotations.oauth.OAuthConsumerKey;
import org.mule.api.annotations.oauth.OAuthConsumerSecret;
import org.mule.api.annotations.oauth.OAuthProtected;
import org.mule.api.annotations.param.Default;
import org.mule.api.annotations.param.Optional;
import org.mule.api.annotations.rest.HttpMethod;
import org.mule.api.annotations.rest.RestCall;
import org.mule.api.annotations.rest.RestExceptionOn;
import org.mule.api.annotations.rest.RestHttpClient;
import org.mule.api.annotations.rest.RestPostParam;
import org.mule.api.annotations.rest.RestQueryParam;
import org.mule.api.annotations.rest.RestUriParam;
import org.mule.util.StringUtils;

import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.WebResource;
import com.sun.jersey.api.client.config.ClientConfig;
import com.sun.jersey.api.client.config.DefaultClientConfig;
import com.sun.jersey.api.client.filter.LoggingFilter;
import com.sun.jersey.multipart.impl.MultiPartWriter;
import com.sun.jersey.oauth.client.OAuthClientFilter;
import com.sun.jersey.oauth.signature.HMAC_SHA1;
import com.sun.jersey.oauth.signature.OAuthParameters;
import com.sun.jersey.oauth.signature.OAuthSecrets;
/**
 * Indivo module
 *
 * @author MuleSoft, Inc.
 */
@Connector(name="indivo", schemaVersion="3.3")
@OAuth(provider=com.mulesoft.module.indivo.IndivoOAuthProvider.class,
       requestTokenUrl = "http://sandbox.indivohealth.org:8000/oauth/request_token",
       accessTokenUrl = "http://sandbox.indivohealth.org:8000/oauth/access_token",
       authorizationUrl = "http://sandbox.indivohealth.org/oauth/authorize",
       authorizationParameters = {
               @OAuthAuthorizationParameter(name = "indivo_record_id", type = String.class, optional = true, description=""),
               @OAuthAuthorizationParameter(name = "indivo_carenet_id", type = String.class, optional = true, description="")
       })
       
public abstract class IndivoModule
{
    /**
     * URL of the Indivo server API
     */
    @Configurable
    @RestUriParam("server")
    private String server;
    
    /**
     * Indivo server port 
     */
    @Configurable
    @Optional
    @Default("80")
    @RestUriParam("port")
    private int port;
    
    /**
     * Indivo server protocol 
     */
    @Configurable
    @Optional
    @Default("http")
    @RestUriParam("protocol")
    private String protocol;

    /**
     * Application key
     */
    @Configurable
    @OAuthConsumerKey
    private String appKey;
    
    /**
     * Application secret
     */
    @Configurable
    @OAuthConsumerSecret
    private String appSecret;
    
    /**
    * debug mode
    */
    @Configurable
    @Optional
    @Default("false")
    private boolean debug;

    @OAuthAccessToken 
    private String accessToken;
    
    @OAuthAccessTokenSecret 
    private String accessTokenSecret;

    private Client client;
    
    //======================== ACCOUNT ==============================================//-
    
    /**
     * Create a new account, and send out initialization emails
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-create}
     *
     * @param primarySecret Does this account require a primary secret?
     * @param secondarySecret Does this account require a secondary secret?
	 * @param contactEmail A valid email at which to reach the account holder. If empty, accountId will be used.
     * @param accountId An identifier for the new account. Must be a valid email address. REQUIRED
     * @param fullName The full name to associate with the account.
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return information about the new account on success
     * Example Return Value:
	 *	
	 *	<Account id="joeuser@indivo.example.org">
	 *	  <fullName>Joe User</fullName>
	 *	  <contactEmail>joeuser@gmail.com</contactEmail>
	 *	  <lastLoginAt>2010-05-04T15:34:23Z</lastLoginAt>
	 *	  <totalLoginCount>43</totalLoginCount>
	 *	  <failedLoginCount>0</failedLoginCount>
	 *	  <state>active</state>
	 *	  <lastStateChange>2009-04-03T13:12:12Z</lastStateChange>
	 *	
	 *	  <authSystem name="password" username="joeuser" />
	 *	  <authSystem name="hospital_sso" username="Joe_User" />
	 *	</Account>
     */
    @Processor
    public String accountCreate(@Optional @Default("false") boolean primarySecret,
                                @Optional @Default("false") boolean secondarySecret,
                                @Optional String contactEmail,
                                String accountId,
                                @Optional @Default("") String fullName) throws Exception
    {        
        final String apiUrl = getApiUrl("accounts/");

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        r.accept(MediaType.APPLICATION_XML_TYPE).type(MediaType.APPLICATION_FORM_URLENCODED_TYPE);

        /*
	  		Formdata Parameters:
			 	
			primary_secret_p Ð 0 or 1: Does this account require a primary secret?
			secondary_secret_p Ð 0 or 1: Does this account require a secondary secret?
			contact_email Ð A valid email at which to reach the account holder.
			account_id Ð An identifier for the new account. Must be a valid email address. REQUIRED
			full_name Ð The full name to associate with the account.
		 */
        r = r.queryParam("primary_secret_p", primarySecret ? "1" : "0")
        	 .queryParam("secondary_secret_p", secondarySecret ? "1" : "0")
        	 .queryParam("contact_email", StringUtils.isEmpty(contactEmail) ? accountId : contactEmail)
        	 .queryParam("account_id", accountId)
        	 .queryParam("full_name", fullName);

        String response = r.post(String.class);
    	return response;
    }

    
    /**
     * Search for accounts by name or email.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-search}
     * 
     * @param contactEmail The full name of the account to search for
     * @param fullName The contact email of the account to search for
     * 
     * @throws IOException if not successful
     * 
     * @return information about matching accounts
     * Example Return Value:
	 *	
	 *	<Account id="joeuser@indivo.example.org">
	 *	  <fullName>Joe User</fullName>
	 *	  <contactEmail>joeuser@gmail.com</contactEmail>
	 *	  <lastLoginAt>2010-05-04T15:34:23Z</lastLoginAt>
	 *	  <totalLoginCount>43</totalLoginCount>
	 *	  <failedLoginCount>0</failedLoginCount>
	 *	  <state>active</state>
	 *	  <lastStateChange>2009-04-03T13:12:12Z</lastStateChange>
	 *	
	 *	  <authSystem name="password" username="joeuser" />
	 *	  <authSystem name="hospital_sso" username="Joe_User" />
	 *	</Account>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/search", 
              method = HttpMethod.GET, 
              exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String accountSearch(@RestQueryParam("contact_email") @Optional @Default("") String contactEmail,
                                         @RestQueryParam("fullname") @Optional @Default("") String fullName) throws IOException;
    
    /**
     * Display information about an account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-info}
     *
     * @param accountId The email identifier of the Indivo account. REQUIRED     
     * 
     * @throws IOException if not successful
     * 
     * @return information about the account
     * Example Return Value:
     *  
     *  <Account id="joeuser@indivo.example.org">
     *    <fullName>Joe User</fullName>
     *    <contactEmail>joeuser@gmail.com</contactEmail>
     *    <lastLoginAt>2010-05-04T15:34:23Z</lastLoginAt>
     *    <totalLoginCount>43</totalLoginCount>
     *    <failedLoginCount>0</failedLoginCount>
     *    <state>active</state>
     *    <lastStateChange>2009-04-03T13:12:12Z</lastStateChange>
     *  
     *    <authSystem name="password" username="joeuser" />
     *    <authSystem name="hospital_sso" username="Joe_User" />
     *  </Account>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}", 
              method = HttpMethod.GET, 
              exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String accountInfo(@RestUriParam("account_id") String accountId) throws IOException;
    
    /**
     * Get oAuth credentials for an app to run in Connect or SMART REST mode.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:get-connect-credentials}
     * 
     * @param accountId  The email identifier of the Indivo account to authorize the connect credentials
     * @param phaId The email identifier of the Indivo user app to grant access via the connect credentials
     * @param recordId The identifier of the Indivo Record to which to grant access via the connect credentials
     * 
     * @throws IOException if not successful
     * 
     * @return set of credentials providing access for the app to the record, via Connect-Style Authentication and via Standard oAuth authentication. 
     *         Additionally, the credentials include a precalculated oAuth Header that the app can use to access the record.
     * Example Return Value:
     * 
     * <ConnectCredentials>
     *   <App id="problems@apps.indivo.org" />
     *   <ConnectToken>1QzyGdx13Da</ConnectToken>
     *   <ConnectSecret>re3Qg4dxaf9</ConnectSecret>
     *   <APIBase>http://your_indivo_instance.org:8000</APIBase>
     *   <RESTToken>7qGer7dx4gC</RESTToken>
     *   <RESTSecret>5JpXb0G2g4u</RESTSecret>
     *   <OAuthHeader>OAuth realm="", oauth_version="1.0", oauth_consumer_key="problems%40apps.indivo.org", oauth_signature_method="HMAC-SHA1", oauth_nonce="VNGQuyvdHbGLsFXm2oIL", oauth_timestamp="1334848404", oauth_signature="HHpwLSSCxgRhYfWDw3uLdmjsyMk%3D"</OAuthHeader>
     *   <ExpiresAt>2012-07-04T00:00:00Z</ExpiresAt>
     * </ConnectCredentials>     
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/apps/{pha_id}/connect_credentials", 
            method = HttpMethod.POST, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String getConnectCredentials(@RestUriParam("account_id") String accountId,
                                                 @RestUriParam("pha_id")String phaId,
                                                 @RestPostParam("record_id") String recordId) throws IOException;

    /**
     * Delete all app-specific User Preferences for an account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:delete-user-preferences}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param phaId The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/apps/{pha_id}/preferences", 
            method = HttpMethod.DELETE, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})                
    public abstract String deleteUserPreferences(@RestUriParam("account_id") String accountId,
                                                 @RestUriParam("pha_id")  String phaId) throws IOException;

    /**
     * Get app-specific User Preferences for an account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:get-user-preferences}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param phaId The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return app-specific user preferences. Preferences format is defined by the app setting the preferences, and will therefore vary.
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/apps/{pha_id}/preferences", 
              method = HttpMethod.GET, 
              exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String getUserPreferences(@RestUriParam("account_id") String accountId,
                                              @RestUriParam("pha_id") String phaId) throws IOException;

    /**
     * Set app-specific User Preferences for an account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:set-user-preferences}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param phaId The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/apps/{pha_id}/preferences", 
            method = HttpMethod.PUT, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String setUserPreferences(@RestUriParam("account_id") String accountId,
                                     @RestUriParam("pha_id") String phaId) throws IOException;

    /**
     * Add a new method of authentication to an account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-authsystem-add}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param userName The username for this account
     * @param password The password for this account
     * @param system The identifier of the desired authsystem. password indicates the internal password system.
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/authsystems", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountAuthsystemAdd(@RestUriParam("account_id") String accountId,
            @RestPostParam("username") String userName,
            @RestPostParam("password") String password,
            @RestPostParam("system") @Optional @Default("password") String system) throws IOException;
    
    /**
     * Change a accountÕs password.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-password-change}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param oldPassword The existing account password.
     * @param newPassword The desired new password.
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/authsystems/password/change", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountPasswordChange(@RestUriParam("account_id") String accountId,
            @RestPostParam("old") String oldPassword,
            @RestPostParam("new") String newPassword) throws IOException;

    /**
     * Force the password of an account to a given value.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-password-set}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param password The new password to set.
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/authsystems/password/change", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountPasswordSet(@RestUriParam("account_id") String accountId,
            @RestPostParam("password") String password) throws IOException;

    /**
     * Force the username of an account to a given value.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-username-set}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param userName The new username to set.
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/authsystems/password/set-username", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountUsernameSet(@RestUriParam("account_id") String accountId,
            @RestPostParam("username") String userName) throws IOException;

    /**
     * Validate an accountÕs primary and secondary secrets.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-check-secrets}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param primarySecret A confirmation string sent securely to the patient from Indivo
     * @param secondarySecret The secondary secret of the account to check.
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}//check-secrets/{primary_secret}", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountCheckSecrets(@RestUriParam("account_id") String accountId,
            @RestUriParam("primary_secret") String primarySecret,
			@RestQueryParam("secondary_secret") String secondarySecret) throws IOException;

    /**
     * Resets an account if the user has forgotten its password.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-forgot-password}
     * 
     * @param accountId The email identifier of the Indivo account
     * 
     * @throws IOException if not successful
     * 
     * @return the accountÕs new secondary secret
     * Example Return Value:
     * 
     * <secret>123456</secret>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/forgot-password", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountForgotPassword(@RestUriParam("account_id") String accountId) throws IOException;

    /**
     * List messages in an accountÕs inbox.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-inbox}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param status The account or document status to filter by
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param includeArchive whether or not to include archived messages in the result set.
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return list of inbox messages.
     * Example Return Value:
	 * <Messages>
	 *  <Message id="879">
	 *    <sender>doctor@example.indivo.org</sender>
	 *    <received_at>2010-09-04T14:12:12Z</received_at>
	 *    <read_at>2010-09-04T17:13:24Z</read_at>
	 *    <subject>your test results are looking good</subject>
	 *    <severity>normal</severity>
	 *    <record id="123" />
	 *    <attachment num="1" type="http://indivo.org/vocab/xml/documents#Models" size="12546" />
	 *  </Message>
	 * 
	 *  ...
	 *
	 * </Messages>
     */
    @Processor
    public InputStream accountInbox(String accountId,
			                              @Optional String status,
			                              @Optional String orderBy,
			                              @Optional String limit,
			                              @Optional @Default("false") boolean includeArchive,
			                              @Optional String offset) throws Exception
    {
    	final String apiUrl = getApiUrl("accounts/" + accountId + "/inbox/");

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        
        /*
	  		Query Parameters:
 	
			status Ð The account or document status to filter by
			order_by Ð See Query Operators
			limit Ð See Query Operators
			include_archive Ð 0 or 1: whether or not to include archived messages in the result set.
			offset Ð See Query Operators
		 */
        if (!StringUtils.isEmpty(status))
        	r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(orderBy))
        	r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(limit))
        	r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
        	r = r.queryParam("offset", offset);

        r = r.queryParam("include_archive", includeArchive ? "1" : "0");

        InputStream response = r.get(InputStream.class);

        return response;
    }

    /**
     * Send a message to an account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-send-message}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param body The message body. Defaults to [no body].
     * @param severity The importance of the message. Options are low, medium, high. Defaults to low.
     * @param bodyType The formatting of the message body. Options are plaintext, markdown. Defaults to plaintext.
     * @param messageId An external identifier for the message.
     * @param subject The message subject. Defaults to [no subject].
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{account_id}/inbox/", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String accountSendMessage(@RestUriParam("account_id") String accountId,
            @RestPostParam("body") @Optional @Default("[no body]") String body,
            @RestPostParam("severity") @Optional @Default("low") Severity severity,
            @RestPostParam("body_type") @Optional @Default("plaintext") BodyType bodyType,
            @RestPostParam("message_id") String messageId,
            @RestPostParam("subject") @Optional @Default ("[no subject]") String subject) throws IOException;
    
    /**
     * Retrieve an individual message from an accountÕs inbox.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-inbox-message}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param messageId An external identifier for the message.
     * 
     * @throws IOException if not successful
     * 
     * @return XML describing the message.
     * Example Return Value:
     * <Message id="879">
     *   <sender>doctor@example.indivo.org</sender>
     *   <received_at>2010-09-04T14:12:12Z</received_at>
     *   <read_at>2010-09-04T17:13:24Z</read_at>
     *   <archived_at>2010-09-04T17:15:24Z</archived_at>
     *   <subject>your test results are looking good</subject>
     *   <body>Great results!
     *  It seems you'll live forever!</body>
     *   <severity>normal</severity>
     *   <record id="123" />
     *   <attachment num="1" type="http://indivo.org/vocab/xml/documents#Models" size="12546" />
     * </Message>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/inbox/{message_id}", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String accountInboxMessage(@RestUriParam("account_id") String accountId,
            @RestUriParam("message_id") String messageId) throws IOException;

    /**
     * Archive a message.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-message-archive}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param messageId An external identifier for the message.
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/inbox/{message_id}/archive", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountMessageArchive(@RestUriParam("account_id") String accountId,
            @RestUriParam("message_id") String messageId) throws IOException;
    
    /**
     * Accept a message attachment into the record it corresponds to.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-inbox-message-attachment-accept}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param messageId An external identifier for the message.
     * @param attachmentNumber The 1-indexed number corresponding to the message attachment
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/inbox/{message_id}/attachments/{attachment_number}/accept", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountInboxMessageAttachmentAccept(@RestUriParam("account_id") String accountId,
            @RestUriParam("message_id") String messageId,
            @RestUriParam("attachment_number") String attachmentNumber) throws IOException;

    /**
     * Set basic information about an account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-info-set}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param contactEmail A valid email at which to reach the account holder.
     * @param fullName The full name of the account.
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/info-set", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountInfoSet(@RestUriParam("account_id") String accountId,
                                 @RestPostParam("contact_email") String contactEmail,
                                 @RestPostParam("full_name") String fullName) throws IOException;

    /**
     * Initialize an account, activating it.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-initialize}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param primarySecret A confirmation string sent securely to the patient from Indivo
     * @param secondarySecret A secondary secret
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/initialize/{primary_secret}", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountInitialize(@RestUriParam("account_id") String accountId,
            @RestUriParam("primary_secret") String primarySecret,
            @RestPostParam("secondary_secret") String secondarySecret) throws IOException;
    
    /**
     * List an accountÕs notifications.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-notifications}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param status The account or document status to filter by
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * 
     * @throws IOException if not successful
     * 
     * @return list of the accountÕs notifications.
     * Example Return Value:
     * <Notifications>
     *   <Notification id="468">
     *     <sender>labs@apps.indivo.org</sender>
     *     <received_at>2010-09-03T15:12:12Z</received_at>
     *     <content>A new lab result has been delivered to your account</content>
     *     <record id="123" label="Joe User" />
     *     <document id="579" label="Lab Test 2" />
     *   </Notification>
     * 
     *   ...
     * 
     * </Notifications>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/notifications/", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountNotifications(@RestUriParam("account_id") String accountId,
                                          @RestQueryParam("status") @Optional String status,
                                          @RestQueryParam("order_by") @Optional String orderBy,
                                          @RestQueryParam("limit") @Optional String limit,
                                          @RestQueryParam("offset") @Optional String offset) throws IOException;
    
    /**
     * List the carenets that an account has access to.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-permissions}
     * 
     * @param accountId The email identifier of the Indivo account
     * 
     * @throws IOException if not successful
     * 
     * @return list of carenets
     * Example Return Value:
     * <Carenets record_id="01234">
     *     <Carenet id="456" name="family" mode="explicit" />
     *     <Carenet id="567" name="school" mode="explicit" />
     * </Carenets>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/permissions/", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountPermissions(@RestUriParam("account_id") String accountId) throws IOException;

    /**
     * Display an accountÕs primary secret.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-primary-secret}
     * 
     * @param accountId The email identifier of the Indivo account
     *  
     * @throws IOException if not successful
     * 
     * @return the primary secret.
     * Example Return Value:
     * <secret>123absxzyasdg13b</secret>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/primary-secret", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountPrimarySecret(@RestUriParam("account_id") String accountId) throws IOException;
    
    /**
     * List all available records for an account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-record-list}
     * 
     * @param accountId The email identifier of the Indivo account
     * @param status The account or document status to filter by
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * 
     * @throws IOException if not successful
     * 
     * @return list of records owned or shared with the account.
     * Example Return Value:
     * <Records>
     *   <Record id="123" label="John R. Smith" />
     *   <Record id="234" label="John R. Smith Jr. (shared)" shared="true" role_label="Guardian" />
     *   <Record id="345" label="Juanita R. Smith (carenet)" shared="true" carenet_id="678" carenet_name="family" />
     * 
     *   ...
     * 
     * </Records>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/records/", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountRecordList(@RestUriParam("account_id") String accountId,
            @RestQueryParam("status") @Optional String status,
            @RestQueryParam("order_by") @Optional String orderBy,
            @RestQueryParam("limit") @Optional String limit,
            @RestQueryParam("offset") @Optional String offset) throws IOException;

    /**
     * Reset an account to an uninitialized state.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-reset}
     * 
     * @param accountId The email identifier of the Indivo account
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/reset", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountReset(@RestUriParam("account_id") String accountId) throws IOException;

    /**
     * Return the secondary secret of an account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-secret}
     * 
     * @param accountId The email identifier of the Indivo account
     *  
     * @throws IOException if not successful
     * 
     * @return the secondary secret.
     * Example Return Value:
     * <secret>123456</secret>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/secret", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String accountSecret(@RestUriParam("account_id") String accountId) throws IOException;
    
    /**
     * Sends an account user their primary secret in case they lost it.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-resend-secret}
     * 
     * @param accountId The email identifier of the Indivo account
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/secret-resend", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String accountResendSecret(@RestUriParam("account_id") String accountId) throws IOException;

    /**
     * Set the state of an account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:account-set-state}
     * 
     * @param accountId The email identifier of the Indivo account
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/accounts/{accound_id}/set-state", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String accountSetState(@RestUriParam("account_id") String accountId) throws IOException;

    //======================== APPS ==============================================//-
    /**
     * List all available userapps.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:all-phas}
     * 
     *  
     * @throws IOException if not successful
     * 
     * @return list of app manifests as JSON on success.
     * Example Return Value:
     * [
     * {
     *     "name" : "SMART Problems",
     *     "description" : "Display problems in a table view",
     *     "author" : "Josh Mandel, Children's Hospital Boston",
     *     "id" : "problem-list@apps.smartplatforms.org",
     *     "version" : ".1a",
     * 
     *     "mode" : "ui",
     *     "scope": "record",
     * 
     *     "index" : "http://fda.gping.org:8012/framework/problem_list/index.html",
     *     "icon" : "http://fda.gping.org:8012/framework/problem_list/icon.png",
     * 
     *     "requires" : {
     *         "http://smartplatforms.org/terms#Problem": {
     *             "methods": ["GET"]
     *         }
     *     }
     * },
     * 
     * ... other apps ...
     * 
     * ]
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String allPhas() throws IOException;

    /**
     * List SMART manifests for all available userapps. [SMART-COMPATIBLE]
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:all-manifests}
     * 
     *  
     * @throws IOException if not successful
     * 
     * @return SMART-style manifests for each app.
     * Example Return Value:
     * [
     * {
     *     "name" : "SMART Problems",
     *     "description" : "Display problems in a table view",
     *     "author" : "Josh Mandel, Children's Hospital Boston",
     *     "id" : "problem-list@apps.smartplatforms.org",
     *     "version" : ".1a",
     * 
     *     "mode" : "ui",
     *     "scope": "record",
     * 
     *     "index" : "http://fda.gping.org:8012/framework/problem_list/index.html",
     *     "icon" : "http://fda.gping.org:8012/framework/problem_list/icon.png",
     * 
     *     "requires" : {
     *         "http://smartplatforms.org/terms#Problem": {
     *             "methods": ["GET"]
     *         }
     *     }
     * },
     * 
     * ... other apps ...
     * 
     * ]
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/manifests/", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String allManifests() throws IOException;
    
    /**
     * Return a description of a single userapp. [SMART-COMPATIBLE]
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:pha}
     * 
     * @param phaEmail The email identifier of the Indivo user app
     *  
     * @throws IOException if not successful
     * 
     * @return the appÕs JSON manifest
     * Example Return Value:
     * {
     *     "name" : "SMART Problems",
     *     "description" : "Display problems in a table view",
     *     "author" : "Josh Mandel, Children's Hospital Boston",
     *     "id" : "problem-list@apps.smartplatforms.org",
     *     "version" : ".1a",
     * 
     *     "mode" : "ui",
     *    "scope": "record",
     * 
     *     "index" : "http://fda.gping.org:8012/framework/problem_list/index.html",
     *     "icon" : "http://fda.gping.org:8012/framework/problem_list/icon.png",
     * 
     *     "requires" : {
     *         "http://smartplatforms.org/terms#Problem": {
     *             "methods": ["GET"]
     *         }
     *     }
     * }
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String pha(@RestUriParam("pha_email") String phaEmail) throws IOException;
    
    /**
     * List app-specific documents.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:app-document-list}
     * 
     * @param phaEmail The email identifier of the Indivo user app
     * @param status The account or document status to filter by
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param type  The Indivo document type to filter by
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws IOException if not successful
     * 
     * @return A list of documents
     * Example Return Value:
     * <Documents record_id="" total_document_count="4" pha="problems@apps.indivo.org">
     *   <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *     <createdAt>2009-05-04T17:05:33</createdAt>
     *     <creator id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </creator>
     *     <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *     <suppressor id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </suppressor>
     *     <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *     <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *     <label>HBA1C reading</label>
     *     <status>active</status>
     *     <nevershare>false</nevershare>
     *     <relatesTo>
     *       <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *       <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *     </relatesTo>
     *     <isRelatedFrom>
     *       <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *     </isRelatedFrom>
     *   </Document>
     * 
     *   ...
     * 
     * </Documents>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/documents/", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String appDocumentList(@RestUriParam("pha_email") String phaEmail, 
            @RestQueryParam("status") @Optional String status,
            @RestQueryParam("order_by") @Optional String orderBy,
            @RestQueryParam("type") @Optional String type,
            @RestQueryParam("limit") @Optional String limit,
            @RestQueryParam("offset") @Optional String offset) throws IOException;
    
    /**
     * Create an app-specific Indivo document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:app-document-create}
     * 
     * @param phaEmail The email identifier of the Indivo user app
     * @param document The raw content of the document to create.
     * 
     * @throws IOException if not successful
     * 
     * @return the metadata of the created document
     * Example Return Value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
   @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/documents/", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String appDocumentCreate(@RestUriParam("pha_email") String phaEmail,
                                    String document) throws IOException;

    /**
     * Create an app-specific Indivo document with an associated external id.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:app-document-create-or-update-ext}
     * 
     * @param externalId the external identifier of the desired resource
     * @param phaEmail The email identifier of the Indivo user app
     * @param document The raw content of the document to create.
     * 
     * @throws IOException if not successful
     * 
     * @return the metadata of the created or updated document
     * Example Return Value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/documents/external/{external_id}", 
            method = HttpMethod.PUT, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String appDocumentCreateOrUpdateExt(@RestUriParam("external_id") String externalId,
            @RestUriParam("pha_email") String phaEmail,
            Object document) throws IOException;
    
    /**
     * Fetch the metadata of an app-specific document identified by external id.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:app-document-meta-ext}
     * 
     * @param externalId The external identifier of the desired resource
     * @param phaEmail The email identifier of the Indivo user app
     *  
     * @throws IOException if not successful
     * 
     * @return metadata describing the specified document
     * Example Return Value:
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="problems@apps.indivo.org" type="pha">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/documents/external/{external_id}/meta", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String appDocumentMetaExt(@RestUriParam("external_id") String externalId,
                           @RestUriParam("pha_email") String phaEmail) throws IOException;
    
    /**
     * Delete an app-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:app-document-delete}
     * 
     * @param phaEmail The email identifier of the Indivo user app
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/documents/{document_id}", 
            method = HttpMethod.DELETE, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String appDocumentDelete(@RestUriParam("pha_email")String phaEmail,
            @RestUriParam("document_id") String documentId) throws IOException;

    /**
     * Retrieve an app-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:app-specific-document}
     * 
     * @param phaEmail The email identifier of the Indivo user app
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return raw content of the document
     * Example Return Value:
     * 
     * <DefaultProblemsPreferences record_id="123">
     *   <Preference name="hide_void" value="true" />
     *   <Preference name="show_rels" value="false" />
     * </DefaultProblemsPreferences>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/documents/{document_id}", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String  appSpecificDocument(@RestUriParam("pha_email")String phaEmail,
            @RestUriParam("document_id") String documentId) throws IOException;

    /**
     * Create or Overwrite an app-specific Indivo document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:app-document-create-or-update}
     * 
     * @param phaEmail The email identifier of the Indivo user app
     * @param documentId The unique identifier of the Indivo document
     * @param document The raw content of the document to create.
     * 
     * @throws IOException if not successful
     * 
     * @return metadata describing the created or updated document
     * Example Return Value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="problems@apps.indivo.org" type="pha">
     *   </creator>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading preferences</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/documents/{document_id}", 
            method = HttpMethod.PUT, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String appDocumentCreateOrUpdate(@RestUriParam("pha_email")String phaEmail,
            @RestUriParam("document_id") String documentId,
                                     Object document) throws IOException;

    /**
     * Set the label of an app-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:app-document-label}
     * 
     * @param phaEmail The email identifier of the Indivo user app
     * @param documentId The unique identifier of the Indivo document
     * @param label The new label for the document
     * 
     * @throws IOException if not successful
     * 
     * @return metadata describing the re-labeled document
     * Example Return Value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>RELABELED: New HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/documents/{document_id}/label", 
            method = HttpMethod.PUT, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String appDocumentLabel(@RestUriParam("pha_email")String phaEmail,
            @RestUriParam("document_id") String documentId,
                                     Object label) throws IOException;
    
    /**
     * Fetch the metadata of an app-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:app-document-meta}
     * 
     * @param phaEmail The email identifier of the Indivo user app
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return the document metadata
     * Example Return Value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/documents/external/{external_id}/meta", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})    
    public abstract String appDocumentMeta(@RestUriParam("pha_email") String phaEmail,
            @RestUriParam("document_id") String documentId) throws IOException;
    
    /**
     * Return a SMART manifest for a single userapp. [SMART-COMPATIBLE]
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:app-manifest}
     * 
     * @param phaEmail The email identifier of the Indivo user app
     *  
     * @throws IOException if not successful
     * 
     * @return A SMART-style manifest for the app.
     * Example Return Value:
     * {
     *     "name" : "SMART Problems",
     *     "description" : "Display problems in a table view",
     *     "author" : "Josh Mandel, Children's Hospital Boston",
     *     "id" : "problem-list@apps.smartplatforms.org",
     *     "version" : ".1a",
     * 
     *     "mode" : "ui",
     *    "scope": "record",
     * 
     *     "index" : "http://fda.gping.org:8012/framework/problem_list/index.html",
     *     "icon" : "http://fda.gping.org:8012/framework/problem_list/icon.png",
     * 
     *     "requires" : {
     *         "http://smartplatforms.org/terms#Problem": {
     *             "methods": ["GET"]
     *         }
     *     }
     * }
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/manifest", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})      
    public abstract String appManifest(@RestUriParam("pha_email") String phaEmail) throws IOException;

    /**
     * Return a list of all records that have this pha enabled.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:app-record-list}
     * 
     * @param phaEmail The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return  list of records on success.
     * Example Return Value:
     * 
     * <Records>
     *   <Record id="123" label="John R. Smith" />
     *   <Record id="234" label="Frank Frankson" />
     * 
     *   ...
     * 
     * </Records>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/records/", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})      
    public abstract String appRecordList(@RestUriParam("pha_email") String phaEmail) throws IOException;
    
    /**
     * Fetch an access token for an autonomous app to access a record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:autonomous-access-token}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param phaEmail The email identifier of the Indivo user app
     * @param document The raw content of the document to create.
     * 
     * @throws IOException if not successful
     * 
     * @return a valid access token for the app bound to the record on success
     * Example Return Value:
     * oauth_token=abcd1fw3gasdgh3&oauth_token_secret=jgrlhre4291hfjas&xoauth_indivo_record_id=123
     *
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/apps/{pha_email}/records/{record_id}/access_token", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String autonomousAccessToken(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_email") String phaEmail) throws IOException;
    
  //======================== CARENETS ==============================================//-
    /**
     * List the accounts in a carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-account-list}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * 
     * @throws IOException if not successful
     * 
     * @return  list of accounts in the specified carenet.
     * Example Return Value:
     * 
     * <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}", 
            method = HttpMethod.DELETE,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetDelete(@RestUriParam("carenet_id") String carenetId) throws IOException;

    /**
     * List the accounts in a carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-account-list}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * 
     * @throws IOException if not successful
     * 
     * @return  list of accounts in the specified carenet.
     * Example Return Value:
     * 
     * <CarenetAccounts>
     *   <CarenetAccount id="johndoe@indivo.org" fullName="John Doe" write="true" />
     * 
     *   ...
     * 
     * </CarenetAccounts>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/accounts/", 
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetAccountList(@RestUriParam("carenet_id") String carenetId) throws IOException;
    
    /**
     * Add an account to a carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-account-create}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param write Whether this account can write to the carenet (optional, true by default)
     * @param accountId An identifier for the account. Must be a valid email address.
     * 
     * @throws IOException if not successful
     * 
     * @return @return <ok/> if successful
     *
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/accounts/", 
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetAccountCreate(@RestUriParam("carenet_id") String carenetId,
            @RestQueryParam("write") @Optional @Default("true") boolean write,
            @RestQueryParam("account_id") String accountId) throws IOException;
    
    /**
     * Remove an account from a carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-account-delete}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param accountId An identifier for the account. Must be a valid email address.
     * 
     * @throws IOException if not successful
     * 
     * @return @return <ok/> if successful
     *
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/accounts/{account_id}", 
            method = HttpMethod.DELETE,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetAccountDelete(@RestUriParam("carenet_id") String carenetId,
            @RestUriParam("account_id") String accountId) throws IOException;

    /**
     * List the permissions of an account within a carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-account-permissions}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param accountId An identifier for the account. Must be a valid email address.
     * 
     * @throws IOException if not successful
     * 
     * @return list of document types that the account can access within a carenet. Currently always returns all document types.
     * Example Return Value:
     * 
     * <Permissions>
     *   <DocumentType type="*" write="true" />
     * </Permissions>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/accounts/{account_id}", 
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetAccountPermissions(@RestUriParam("carenet_id") String carenetId,
            @RestUriParam("account_id") String accountId) throws IOException;

    /**
     * List Apps within a given carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-apps-list}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * 
     * @throws IOException if not successful
     * 
     * @return manifests for the apps on success.
     * Example Return Value:
     * 
     * [
     * {
     *     "name" : "SMART Problems",
     *     "description" : "Display problems in a table view",
     *     "author" : "Josh Mandel, Children's Hospital Boston",
     *     "id" : "problem-list@apps.smartplatforms.org",
     *     "version" : ".1a",
     * 
     *     "mode" : "ui",
     *     "scope": "record",
     * 
     *     "index" : "http://fda.gping.org:8012/framework/problem_list/index.html",
     *     "icon" : "http://fda.gping.org:8012/framework/problem_list/icon.png",
     * 
     *     "requires" : {
     *         "http://smartplatforms.org/terms#Problem": {
     *             "methods": ["GET"]
     *         }
     *     }
     * },
     * 
     * ... other apps ...
     * 
     * ]
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/apps", 
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetAppsList(@RestUriParam("carenet_id") String carenetId) throws IOException;
    
    /**
     * Remove an app from a given carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-apps-delete}
     * 
     * @param carenetId The email identifier of the Indivo account
     * @param phaEmail The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/apps/{pha_email}", 
            method = HttpMethod.DELETE,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetAppsDelete(@RestUriParam("carenet_id") String carenetId,
            @RestUriParam("pha_email") String phaEmail) throws IOException;
    
    /**
     * Add an app to a carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-apps-create}
     * 
     * @param carenetId The email identifier of the Indivo account
     * @param phaEmail The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/apps/{pha_email}", 
            method = HttpMethod.PUT,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetAppsCreate(@RestUriParam("carenet_id") String carenetId,
            @RestUriParam("pha_email") String phaEmail) throws IOException;
 
    /**
     * Read demographics from a carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-read-demographics}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param responseFormat one of rdfxml (SMART RDF/XML), json (SDMJ), or xml (SDMX). Default is rdfxml
     * 
     * @throws IOException if not successful
     * 
     * @return demographics formatted in the requested response_format (default application/rdf+xml) on success
     * Example Return Value:
     * 
     * application/rdf+xml:
     * 
     *     <?xml version="1.0" encoding="UTF-8"?>
     *     <rdf:RDF xmlns:dcterms="http://purl.org/dc/terms/"
     *          xmlns:foaf="http://xmlns.com/foaf/0.1/"
     *          xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     *          xmlns:sp="http://smartplatforms.org/terms#"   xmlns:v="http://www.w3.org/2006/vcard/ns#">
     *     <rdf:Description rdf:nodeID="_6730841b-05df-445f-8695-ed64197f4e6a">
     *         <v:family-name>William</v:family-name>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Name"/>
     *         <v:given-name>Robinson</v:given-name>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_bcf66b59-e438-49b2-b572-99af4319b297">
     *         <rdf:value>800-870-3011</rdf:value>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Tel"/>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Home"/>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Pref"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_8cbe3da1-fb53-4d31-80b6-19e0d04220ad">
     *         <dcterms:identifier>http://indivo.org/records/96ff9eb2-3b18-4a0e-9df8-5a731b96d5d6</dcterms:identifier>
     *         <sp:system>Indivo Record</sp:system>
     *         <dcterms:title>Indivo Record 96ff9eb2-3b18-4a0e-9df8-5a731b96d5d6</dcterms:title>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_451ade87-b519-4c92-8d07-2bbfcb23999c">
     *         <rdf:value>800-870-3011</rdf:value>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Tel"/>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Home"/>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Pref"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://indivo.org/records/96ff9eb2-3b18-4a0e-9df8-5a731b96d5d6">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#MedicalRecord"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://indivo.org/records/96ff9eb2-3b18-4a0e-9df8-5a731b96d5d6/demographics">
     *         <v:tel rdf:nodeID="_bcf66b59-e438-49b2-b572-99af4319b297"/>
     *         <v:tel rdf:nodeID="_451ade87-b519-4c92-8d07-2bbfcb23999c"/>
     *         <sp:email>william.robinson@example.com</sp:email>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Demographics"/>
     *         <v:bday rdf:datatype="http://www.w3.org/2001/XMLSchema#date">1965-08-09</v:bday>
     *         <v:adr rdf:nodeID="_9f06ee63-3704-4b2a-9c2a-109cc9c99a57"/>
     *         <sp:belongsTo rdf:resource="http://indivo.org/records/96ff9eb2-3b18-4a0e-9df8-5a731b96d5d6"/>
     *         <foaf:gender>male</foaf:gender>
     *         <sp:preferredLanguage>EN</sp:preferredLanguage>
     *         <v:n rdf:nodeID="_6730841b-05df-445f-8695-ed64197f4e6a"/>
     *         <sp:medicalRecordNumber rdf:nodeID="_8cbe3da1-fb53-4d31-80b6-19e0d04220ad"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_9f06ee63-3704-4b2a-9c2a-109cc9c99a57">
     *         <v:street-address>23 Church Rd</v:street-address>
     *         <v:country>USA</v:country>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Address"/>
     *         <v:region>OK</v:region>
     *         <v:locality>Bixby</v:locality>
     *         <v:postal-code>74008</v:postal-code>
     *     </rdf:Description>
     * </rdf:RDF>
     * 
     * application/xml:
     * 
     *     <Models>
     *         <Model name="Demographics" documentId="44190967-cbaa-43a7-a98c-9f97f094ef2b">
     *             <Field name="bday">1965-08-09</Field>
     *             <Field name="email">william.robinson@example.com</Field>
     *             <Field name="ethnicity"/>
     *             <Field name="gender">male</Field>
     *             <Field name="preferred_language">EN</Field>
     *             <Field name="race"/>
     *             <Field name="name_given">Robinson</Field>
     *             <Field name="name_suffix"/>
     *             <Field name="name_family">William</Field>
     *             <Field name="name_prefix"/>
     *             <Field name="tel_2_type">h</Field>
     *             <Field name="tel_2_preferred_p">True</Field>
     *             <Field name="tel_2_number">800-870-3011</Field>
     *             <Field name="adr_region">OK</Field>
     *             <Field name="adr_country">USA</Field>
     *             <Field name="adr_postalcode">74008</Field>
     *             <Field name="adr_city">Bixby</Field>
     *             <Field name="adr_street">23 Church Rd</Field>
     *             <Field name="tel_1_type">h</Field>
     *             <Field name="tel_1_preferred_p">True</Field>
     *             <Field name="tel_1_number">800-870-3011</Field>
     *         </Model>
     *     </Models>
     * 
     * application/json:
     * 
     *     [
     *         {
     *             "__modelname__": "Demographics",
     *             "__documentid__": "44190967-cbaa-43a7-a98c-9f97f094ef2b",
     *             "name_given": "Robinson",
     *             "name_family": "William",
     *             "name_prefix": null,
     *             "name_suffix": null,
     *             "gender": "male",
     *             "race": null,
     *             "ethnicity": null,
     *             "bday": "1965-08-09",
     *             "email": "william.robinson@example.com",
     *             "preferred_language": "EN",
     *             "tel_1_type": "h",
     *             "tel_1_number": "800-870-3011",
     *             "tel_1_preferred_p": true,
     *             "tel_2_type": "h",
     *             "tel_2_number": "800-870-3011",
     *             "tel_2_preferred_p": true,
     *             "adr_street": "23 Church Rd",
     *             "adr_city": "Bixby",
     *             "adr_postalcode": "74008",
     *             "adr_region": "OK",
     *             "adr_country": "USA"
     *         }
     *     ]
     * 
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/demographics", 
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetReadDemographics(@RestUriParam("carenet_id") String carenetId,
            @RestQueryParam("response_format") @Optional @Default("rdfxml") DemographicsResponseFormat responseFormat) throws IOException;

    /**
     * List documents from a given carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-document-list}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param type The Indivo document type to filter by
     * 
     * @throws IOException if not successful
     * 
     * @return  document list on success
     * Example Return Value:
     * 
     * <Documents record_id="123" total_document_count="3" pha="" >
     *   <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *     <createdAt>2009-05-04T17:05:33</createdAt>
     *     <creator id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </creator>
     *     <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *     <suppressor id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </suppressor>
     *     <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *     <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *     <label>HBA1C reading</label>
     *     <status>active</status>
     *     <nevershare>false</nevershare>
     *     <relatesTo>
     *       <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *       <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *     </relatesTo>
     *     <isRelatedFrom>
     *       <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *     </isRelatedFrom>
     *   </Document>
     * 
     *   ...
     * 
     * </Documents>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/documents/", 
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetDocumentList(@RestUriParam("carenet_id") String carenetId,
                                           @RestQueryParam("type") String type) throws IOException;
    
    /**
     * Return a document from a carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-document}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return document content on success
     * Example Return Value:
     * 
     * <ExampleDocument>
     *   <content>That's my content</content>
     *   <otherField attr="val" />
     * </ExampleDocument>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/documents/{document_id}", 
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetDocument(@RestUriParam("carenet_id") String carenetId,
            @RestUriParam("document_id") String documentId) throws IOException;
    
    /**
     * Fetch the metadata of a record-specific document via a carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-document-meta}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return documentÕs metadata
     * Example Return Value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     * 
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/documents/{document_id}/meta", 
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetDocumentMeta(@RestUriParam("carenet_id") String carenetId,
            @RestUriParam("document_id") String documentId) throws IOException;
    
    /**
     * Get basic information about the record to which a carenet belongs.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-record}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * 
     * @throws IOException if not successful
     * 
     * @return XML describing the record.
     * Example Return Value:
     * 
     * <Record id="123" label="Joe User">
     *   <demographics document_id="467" />
     *   <created at="2010-10-23T10:23:34Z" by="indivoconnector@apps.indivo.org" />
     * </Record>
     * 
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/record", 
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetRecord(@RestUriParam("carenet_id") String carenetId) throws IOException;

    /**
     * Change a carenetÕs name.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-rename}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param carenetName The new name for the carenet.
     * 
     * @throws IOException if not successful
     * 
     * @return XML describing the renamed carenet on success
     * Example Return Value:
     * 
     * <Carenets record_id="123">
     *   <Carenet id="789" name="Work/School" mode="explicit" />
     * </Carenets>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/carenets/{carenet_id}/rename", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetRename(@RestUriParam("carenet_id") String carenetId,
            @RestPostParam("name") String carenetName) throws IOException;

    /**
     * List the equipment data for a given carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-equipment-list}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param status The account or document status to filter by
     * @param fieldName See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param fieldValue See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param dateGroup See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param groupBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param aggregateBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param dateRange See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return A list of equipment
     * Example Return Value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <DateRange value="date_measured*1995-03-10T00:00:00Z*" />
     *     <Filters>
     *       <Filter name="equipment_name" value="pacemaker"/>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *       <Document id="261ca370-927f-41af-b001-7b615c7a468e" type="http://indivo.org/vocab/xml/documents#Models" size="1653" digest="0799971784e5a2d199cd6585415a8cd57f7bf9e4f8c8f74ef67a1009a1481cd6" record_id="">
     *         <createdAt>2011-05-02T17:48:13Z</createdAt>
     *         <creator id="mymail@mail.ma" type="Account">
     *           <fullname>full name</fullname>
     *         </creator>
     *         <original id="261ca370-927f-41af-b001-7b615c7a468e"/>
     *         <label>testing</label>
     *         <status>active</status>
     *         <nevershare>false</nevershare>
     *       </Document>
     *     </Meta>
     *     <Item>
     *       <Equipment xmlns="http://indivo.org/vocab/xml/documents#">
     *         <dateStarted>2009-02-05</dateStarted>
     *         <dateStopped>2010-06-12</dateStopped>
     *         <type>cardiac</type>
     *         <name>Pacemaker</name>
     *         <vendor>Acme Medical Devices</vendor>
     *         <id>167-ABC-23</id>
     *         <description>it works</description>
     *         <specification>blah blah blah</specification>
     *       </Equipment>
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @Processor
    public InputStream carenetEquipmentList(String carenetId, 
                                          @Optional String status,
                                          @Optional String fieldName,
                                          @Optional String fieldValue,                                          
                                          @Optional String dateGroup,
                                          @Optional String groupBy,
                                          @Optional String orderBy,
                                          @Optional String aggregateBy,
                                          @Optional String dateRange,
                                          @Optional String limit,
                                          @Optional String offset) throws Exception
    {
        final String apiUrl = getApiUrl("carenets/" + carenetId + "/reports/minimal/equipment/");

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        
        /*
        Query Parameters:

        status Ð The account or document status to filter by
        {FIELD} Ð See Query Operators, Valid Query Fields
        date_group Ð See Query Operators
        group_by Ð See Query Operators
        order_by Ð See Query Operators
        aggregate_by Ð See Query Operators
        date_range Ð See Query Operators
        limit Ð See Query Operators
        offset Ð See Query Operators
         */

        if (!StringUtils.isEmpty(status))
            r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(fieldName) && !StringUtils.isEmpty(fieldValue))
            r = r.queryParam(fieldName, fieldValue);
        if (!StringUtils.isEmpty(dateGroup))
            r = r.queryParam("date_group", dateGroup);
        if (!StringUtils.isEmpty(groupBy))
            r = r.queryParam("group_by", groupBy);                
        if (!StringUtils.isEmpty(orderBy))
            r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(aggregateBy))
            r = r.queryParam("aggregate_by", aggregateBy);
        if (!StringUtils.isEmpty(dateRange))
            r = r.queryParam("date_range", dateRange);
        if (!StringUtils.isEmpty(limit))
            r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
            r = r.queryParam("offset", offset);
        
        InputStream response = r.get(InputStream.class);

        return response;
    }
    
    /**
     * List the measurement data for a given carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-measurement-list}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param labCode The identifier corresponding to the measurement being made.
     * @param status The account or document status to filter by
     * @param fieldName See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param fieldValue See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param dateGroup See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param groupBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param aggregateBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param dateRange See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return A list of measurements
     * Example Return Value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <DateRange value="date_measured*1995-03-10T00:00:00Z*" />
     *     <Filters>
     *       <Filter name="lab_type" value="hematology"/>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *       <Document id="261ca370-927f-41af-b001-7b615c7a468e" type="http://indivo.org/vocab/xml/documents#Measurement" size="1653" digest="0799971784e5a2d199cd6585415a8cd57f7bf9e4f8c8f74ef67a1009a1481cd6" record_id="">
     *         <createdAt>2011-05-02T17:48:13Z</createdAt>
     *         <creator id="mymail@mail.ma" type="Account">
     *           <fullname>full name</fullname>
     *         </creator>
     *         <original id="261ca370-927f-41af-b001-7b615c7a468e"/>
     *         <label>testing</label>
     *         <status>active</status>
     *         <nevershare>false</nevershare>
     *       </Document>
     *     </Meta>
     *     <Item>
     *       <Measurement id="1234" value="120" type="blood pressure systolic" datetime="2011-03-02T00:00:00Z" unit="mmHg" source_doc="3456" />
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @Processor
    public InputStream carenetMeasurementList(String carenetId, 
                                          String labCode,
                                          @Optional String status,
                                          @Optional String fieldName,
                                          @Optional String fieldValue,                                          
                                          @Optional String dateGroup,
                                          @Optional String groupBy,
                                          @Optional String orderBy,
                                          @Optional String aggregateBy,
                                          @Optional String dateRange,
                                          @Optional String limit,
                                          @Optional String offset) throws Exception
    {
        final String apiUrl = getApiUrl("carenets/" + carenetId + "/reports/minimal/measurements/" + labCode + "/");

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        
        /*
        Query Parameters:

        status Ð The account or document status to filter by
        {FIELD} Ð See Query Operators, Valid Query Fields
        date_group Ð See Query Operators
        group_by Ð See Query Operators
        order_by Ð See Query Operators
        aggregate_by Ð See Query Operators
        date_range Ð See Query Operators
        limit Ð See Query Operators
        offset Ð See Query Operators
         */

        if (!StringUtils.isEmpty(status))
            r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(fieldName) && !StringUtils.isEmpty(fieldValue))
            r = r.queryParam(fieldName, fieldValue);
        if (!StringUtils.isEmpty(dateGroup))
            r = r.queryParam("date_group", dateGroup);
        if (!StringUtils.isEmpty(groupBy))
            r = r.queryParam("group_by", groupBy);                
        if (!StringUtils.isEmpty(orderBy))
            r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(aggregateBy))
            r = r.queryParam("aggregate_by", aggregateBy);
        if (!StringUtils.isEmpty(dateRange))
            r = r.queryParam("date_range", dateRange);
        if (!StringUtils.isEmpty(limit))
            r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
            r = r.queryParam("offset", offset);
        
        InputStream response = r.get(InputStream.class);

        return response;
    }    
    
    /**
     * List the procedure data for a given carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-procedure-list}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param status The account or document status to filter by
     * @param fieldName See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param fieldValue See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param dateGroup See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param groupBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param aggregateBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param dateRange See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return A list of procedures
     * Example Return Value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <DateRange value="date_measured*1995-03-10T00:00:00Z*" />
     *     <Filters>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *       <Document id="261ca370-927f-41af-b001-7b615c7a468e" type="http://indivo.org/vocab/xml/documents#Procedure" size="1653" digest="0799971784e5a2d199cd6585415a8cd57f7bf9e4f8c8f74ef67a1009a1481cd6" record_id="">
     *         <createdAt>2011-05-02T17:48:13Z</createdAt>
     *         <creator id="mymail@mail.ma" type="Account">
     *           <fullname>full name</fullname>
     *         </creator>
     *         <original id="261ca370-927f-41af-b001-7b615c7a468e"/>
     *         <label>testing</label>
     *         <status>active</status>
     *         <nevershare>false</nevershare>
     *       </Document>
     *     </Meta>
     *     <Item>
     *       <Procedure xmlns="http://indivo.org/vocab/xml/documents#">
     *         <datePerformed>2009-05-16T12:00:00</datePerformed>
     *         <name type="http://codes.indivo.org/procedures#" value="85" abbrev="append">Appendectomy</name>
     *         <provider>
     *           <name>Kenneth Mandl</name>
     *           <institution>Children's Hospital Boston</institution>
     *         </provider>
     *       </Procedure>
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @Processor
    public InputStream carenetProcedureList(String carenetId, 
                                          @Optional String status,
                                          @Optional String fieldName,
                                          @Optional String fieldValue,                                          
                                          @Optional String dateGroup,
                                          @Optional String groupBy,
                                          @Optional String orderBy,
                                          @Optional String aggregateBy,
                                          @Optional String dateRange,
                                          @Optional String limit,
                                          @Optional String offset) throws Exception
    {
        final String apiUrl = getApiUrl("carenets/" + carenetId + "/reports/minimal/procedures/");

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        
        /*
        Query Parameters:

        status Ð The account or document status to filter by
        {FIELD} Ð See Query Operators, Valid Query Fields
        date_group Ð See Query Operators
        group_by Ð See Query Operators
        order_by Ð See Query Operators
        aggregate_by Ð See Query Operators
        date_range Ð See Query Operators
        limit Ð See Query Operators
        offset Ð See Query Operators
         */

        if (!StringUtils.isEmpty(status))
            r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(fieldName) && !StringUtils.isEmpty(fieldValue))
            r = r.queryParam(fieldName, fieldValue);
        if (!StringUtils.isEmpty(dateGroup))
            r = r.queryParam("date_group", dateGroup);
        if (!StringUtils.isEmpty(groupBy))
            r = r.queryParam("group_by", groupBy);                
        if (!StringUtils.isEmpty(orderBy))
            r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(aggregateBy))
            r = r.queryParam("aggregate_by", aggregateBy);
        if (!StringUtils.isEmpty(dateRange))
            r = r.queryParam("date_range", dateRange);
        if (!StringUtils.isEmpty(limit))
            r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
            r = r.queryParam("offset", offset);
        
        InputStream response = r.get(InputStream.class);

        return response;
    }
    
    /**
     * List the simple_clinical_notes data for a given carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-simple-clinical-notes-list}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param status The account or document status to filter by
     * @param fieldName See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param fieldValue See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param dateGroup See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param groupBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param aggregateBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param dateRange See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return A list of notes
     * Example Return Value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <DateRange value="date_measured*1995-03-10T00:00:00Z*" />
     *     <Filters>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *       <Document id="261ca370-927f-41af-b001-7b615c7a468e" type="http://indivo.org/vocab/xml/documents#SimpleClinicalNote" size="1653" digest="0799971784e5a2d199cd6585415a8cd57f7bf9e4f8c8f74ef67a1009a1481cd6" record_id="">
     *         <createdAt>2011-05-02T17:48:13Z</createdAt>
     *         <creator id="mymail@mail.ma" type="Account">
     *           <fullname>full name</fullname>
     *         </creator>
     *         <original id="261ca370-927f-41af-b001-7b615c7a468e"/>
     *         <label>testing</label>
     *         <status>active</status>
     *         <nevershare>false</nevershare>
     *       </Document>
     *     </Meta>
     *     <Item>
     *       <SimpleClinicalNote xmlns="http://indivo.org/vocab/xml/documents#">
     *         <dateOfVisit>2010-02-02T12:00:00Z</dateOfVisit>
     *         <finalizedAt>2010-02-03T13:12:00Z</finalizedAt>
     *         <visitType type="http://codes.indivo.org/visit-types#" value="acute">Acute Care</visitType>
     *         <visitLocation>Longfellow Medical</visitLocation>
     *         <specialty type="http://codes.indivo.org/specialties#" value="hem-onc">Hematology/Oncology</specialty>
     * 
     *         <signature>
     *           <at>2010-02-03T13:12:00Z</at>
     *           <provider>
     *             <name>Kenneth Mandl</name>
     *             <institution>Children's Hospital Boston</institution>
     *           </provider>
     *         </signature>
     * 
     *         <signature>
     *           <provider>
     *             <name>Isaac Kohane</name>
     *             <institution>Children's Hospital Boston</institution>
     *           </provider>
     *         </signature>
     * 
     *         <chiefComplaint>stomach ache</chiefComplaint>
     *         <content>Patient presents with ... </content>
     *       </SimpleClinicalNote>
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @Processor
    public InputStream carenetSimpleClinicalNotesList(String carenetId, 
                                          @Optional String status,
                                          @Optional String fieldName,
                                          @Optional String fieldValue,                                          
                                          @Optional String dateGroup,
                                          @Optional String groupBy,
                                          @Optional String orderBy,
                                          @Optional String aggregateBy,
                                          @Optional String dateRange,
                                          @Optional String limit,
                                          @Optional String offset) throws Exception
    {
        final String apiUrl = getApiUrl("carenets/" + carenetId + "/reports/minimal/simple-clinical-notes/");

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        
        /*
        Query Parameters:

        status Ð The account or document status to filter by
        {FIELD} Ð See Query Operators, Valid Query Fields
        date_group Ð See Query Operators
        group_by Ð See Query Operators
        order_by Ð See Query Operators
        aggregate_by Ð See Query Operators
        date_range Ð See Query Operators
        limit Ð See Query Operators
        offset Ð See Query Operators
         */

        if (!StringUtils.isEmpty(status))
            r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(fieldName) && !StringUtils.isEmpty(fieldValue))
            r = r.queryParam(fieldName, fieldValue);
        if (!StringUtils.isEmpty(dateGroup))
            r = r.queryParam("date_group", dateGroup);
        if (!StringUtils.isEmpty(groupBy))
            r = r.queryParam("group_by", groupBy);                
        if (!StringUtils.isEmpty(orderBy))
            r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(aggregateBy))
            r = r.queryParam("aggregate_by", aggregateBy);
        if (!StringUtils.isEmpty(dateRange))
            r = r.queryParam("date_range", dateRange);
        if (!StringUtils.isEmpty(limit))
            r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
            r = r.queryParam("offset", offset);
        
        InputStream response = r.get(InputStream.class);

        return response;
    }
    
    /**
     * List the Model data for a given carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-generic-list}
     * 
     * @param carenetId The id string associated with the Indivo carenet
     * @param dataModel The name of the data model to report on
     * @param status The account or document status to filter by
     * @param fieldName See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param fieldValue See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param dateGroup See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param groupBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param aggregateBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param dateRange See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * @param responseFormat one of json (SDMJ), or xml (SDMX). Default is xml
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return list of DATA_MODELs
     * Example Return Value:
     * 
     * SDMJ Example:
     *    {
     *     "__modelname__": "TestMedication",
     *     "__documentid__": "b1d83191-6edd-4aad-be4e-63117cd4c660",
     *     "name": "ibuprofen",
     *     "date_started": "2010-10-01T00:00:00Z",
     *     "date_stopped": "2010-10-31T00:00:00Z",
     *     "brand_name": "Advil",
     *     "prescription": {
     *         "__modelname__": "TestPrescription",
     *         "__documentid__": "b1d83191-6edd-4aad-be4e-63117cd4c660",
     *         "prescribed_by_name": "Kenneth D. Mandl",
     *         "prescribed_by_institution": "Children's Hospital Boston",
     *         "prescribed_on": "2010-09-30T00:00:00Z",
     *         "prescribed_stop_on": "2010-10-31T00:00:00Z"
     *     },
     *     "fills": [
     *         {
     *             "__modelname__": "TestFill",
     *             "__documentid__": "b1d83191-6edd-4aad-be4e-63117cd4c660",
     *             "date_filled": "2010-10-01T00:00:00Z",
     *             "supply_days": "15",
     *             "filled_at_name": "CVS"
     *         },
     *         {
     *             "__modelname__": "TestFill",
     *             "__documentid__": "b1d83191-6edd-4aad-be4e-63117cd4c660",
     *             "date_filled": "2010-10-16T00:00:00Z",
     *             "supply_days": "15",
     *             "filled_at_name": "CVS"
     *         }
     *     ]
     * }
     * 
     * SDMX Example:
     * 
     * <Models>
     *   <Model name="TestMedication" documentId="b1d83191-6edd-4aad-be4e-63117cd4c660">
     *     <Field name="date_started">2010-10-01T00:00:00Z</Field>
     *     <Field name="name">ibuprofen</Field>
     *     <Field name="brand_name">Advil</Field>
     *     <Field name="date_stopped">2010-10-31T00:00:00Z</Field>
     *     <Field name="prescription">
     *       <Model name="TestPrescription"  documentId="b1d83191-6edd-4aad-be4e-63117cd4c660">
     *         <Field name="prescribed_by_name">Kenneth D. Mandl</Field>
     *         <Field name="prescribed_by_institution">Children's Hospital Boston</Field>
     *         <Field name="prescribed_on">2010-09-30T00:00:00Z</Field>
     *         <Field name="prescribed_stop_on">2010-10-31T00:00:00Z</Field>
     *       </Model>
     *     </Field>
     *     <Field name="fills">
     *       <Models>
     *         <Model name="TestFill"  documentId="b1d83191-6edd-4aad-be4e-63117cd4c660">
     *           <Field name="date_filled">2010-10-01T00:00:00Z</Field>
     *           <Field name="supply_days">15</Field>
     *           <Field name="filled_at_name">CVS</Field>
     *         </Model>
     *         <Model name="TestFill"  documentId="b1d83191-6edd-4aad-be4e-63117cd4c660">
     *           <Field name="date_filled">2010-10-16T00:00:00Z</Field>
     *           <Field name="supply_days">15</Field>
     *           <Field name="filled_at_name">CVS</Field>
     *         </Model>
     *       </Models>
     *     </Field>
     *   </Model>
     * </Models>
     */
    @Processor
    public InputStream carenetGenericList(String carenetId,
                                                 String dataModel, 
                                                 @Optional String status,
                                                 @Optional String fieldName,
                                                 @Optional String fieldValue,                                          
                                                 @Optional String dateGroup,
                                                 @Optional String groupBy,
                                                 @Optional String orderBy,
                                                 @Optional String aggregateBy,
                                                 @Optional String dateRange,
                                                 @Optional String limit,
                                                 @Optional String offset,
                                                 @Optional @Default("xml") GenericResponseFormat responseFormat) throws Exception
    {
        final String apiUrl = getApiUrl("carenets/" + carenetId + "/reports/" + dataModel + "/");
        
        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);    
        
        /*
        Query Parameters:

        status Ð The account or document status to filter by
        {FIELD} Ð See Query Operators, Valid Query Fields
        date_group Ð See Query Operators
        group_by Ð See Query Operators
        order_by Ð See Query Operators
        aggregate_by Ð See Query Operators
        date_range Ð See Query Operators
        limit Ð See Query Operators
        offset Ð See Query Operators
         */

        if (!StringUtils.isEmpty(status))
            r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(fieldName) && !StringUtils.isEmpty(fieldValue))
            r = r.queryParam(fieldName, fieldValue);
        if (!StringUtils.isEmpty(dateGroup))
            r = r.queryParam("date_group", dateGroup);
        if (!StringUtils.isEmpty(groupBy))
            r = r.queryParam("group_by", groupBy);                
        if (!StringUtils.isEmpty(orderBy))
            r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(aggregateBy))
            r = r.queryParam("aggregate_by", aggregateBy);
        if (!StringUtils.isEmpty(dateRange))
            r = r.queryParam("date_range", dateRange);
        if (!StringUtils.isEmpty(limit))
            r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
            r = r.queryParam("offset", offset);
        
        r = r.queryParam("response_format", responseFormat.getGenericResponseFormat());
        
        InputStream response = r.get(InputStream.class);
        
        //TODO: Set response mimeType (see DEVKIT-133)
        return response;       
    }    
    
    /**
     * Query a coding system for a value.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:coding-system-query}
     * 
     * @param systemShortName short name
     * @param query The query string to search for 
     *  
     * @throws IOException if not successful
     * 
     * @return JSON describing coding systems entries that matched query
     * Example Return Value:
     * [{"abbreviation": null, "code": "38341003", "consumer_value": null,
     *   "umls_code": "C0020538",
     *   "full_value": "Hypertensive disorder, systemic arterial (disorder)"},
     *  {"abbreviation": null, "code": "55822004", "consumer_value": null,
     *   "umls_code": "C0020473", "full_value": "Hyperlipidemia (disorder)"}]
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/codes/systems/{system_short_name}/query", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String codingSystemQuery(@RestUriParam("system_short_name") String systemShortName,
            @RestQueryParam("system_short_name") String query) throws IOException;

    //======================== RECORDS ==============================================//-
    /**
     * Create a new record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-create}
     * 
     * @param document A valid Indivo Demographics Document 
     * 
     * @throws IOException if not successful
     * 
     * @return information about the record on success
     * Example Return Value:
     * 
     * <Record id="123" label="Joe Smith">
     *   <demographics document_id="" />
     * </Record>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordCreate(String document) throws IOException;
    
    /**
     * Create a new record with an associated external id..
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-create-ext}
     * 
     * @param principalEmail The email with which to scope an external id.
     * @param externalId The external identifier of the desired resource
     * @param document A valid Indivo Demographics Document 
     * 
     * @throws IOException if not successful
     * 
     * @return information about the record on success
     * Example Return Value:
     * 
     * <Record id="123" label="Joe Smith">
     *   <demographics document_id="" />
     * </Record>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/external/{principal_email}/{external_id}",
            method = HttpMethod.PUT, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordCreateExt(@RestUriParam("principal_email") String principalEmail,
            @RestUriParam("external_id") String externalId,
            String document) throws IOException;

    /**
     * Search for records by label (usually the same as full name).
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-search}
     * 
     * @param label A search string to match against record labels.
     * 
     * @throws IOException if not successful
     * 
     * @return list of matching records on success
     * Example Return Value:
     * 
     * <Records>
     *   <Record id="123" label="John R. Smith" />
     *   <Record id = "234" label="Frank Frankson" />
     * 
     *   ...
     * 
     * </Records>
     * 
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/search",
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordSearch(@RestQueryParam("label") String label) throws IOException;
    
    /**
     * Get information about an individual record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record}
     * 
     * @param recordId The id string associated with the Indivo record
     * 
     * @throws IOException if not successful
     * 
     * @return information about the record.
     * Example Return Value:
     * 
     * <Record id="123" label="Joe Smith">
     *   <demographics document_id="346" />
     * </Record>
     * 
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}",
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String record(@RestUriParam("record_id") String recordId) throws IOException;

    /**
     * List userapps bound to a given record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-phas}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param type A namespaced document type. If specified, only apps which explicitly declare themselves as supporting that document type will be returned.
     * 
     * @throws IOException if not successful
     * 
     * @return list of JSON manifests for the userapps.
     * Example Return Value:
     * 
     * [
     * {
     *     "name" : "SMART Problems",
     *     "description" : "Display problems in a table view",
     *     "author" : "Josh Mandel, Children's Hospital Boston",
     *     "id" : "problem-list@apps.smartplatforms.org",
     *     "version" : ".1a",
     * 
     *     "mode" : "ui",
     *     "scope": "record",
     * 
     *     "index" : "http://fda.gping.org:8012/framework/problem_list/index.html",
     *     "icon" : "http://fda.gping.org:8012/framework/problem_list/icon.png",
     * 
     *     "requires" : {
     *         "http://smartplatforms.org/terms#Problem": {
     *             "methods": ["GET"]
     *         }
     *     }
     * },
     * 
     * ... other apps ...
     * 
     * ]
     * 
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}",
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordPhas(@RestUriParam("record_id") String recordId,
            @RestQueryParam("type") @Optional String type) throws IOException;
   
    /**
     * Remove a userapp from a record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-pha-delete}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param phaId The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}",
            method = HttpMethod.DELETE, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordPhaDelete(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId) throws IOException;
    
    /**
     * Get information about a given userapp bound to a record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-pha}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param phaId The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return JSON manifest for the app
     * Example Return Value:
     * 
     * {
     *     "name" : "SMART Problems",
     *     "description" : "Display problems in a table view",
     *     "author" : "Josh Mandel, Children's Hospital Boston",
     *     "id" : "problem-list@apps.smartplatforms.org",
     *     "version" : ".1a",
     * 
     *     "mode" : "ui",
     *     "scope": "record",
     * 
     *     "index" : "http://fda.gping.org:8012/framework/problem_list/index.html",
     *     "icon" : "http://fda.gping.org:8012/framework/problem_list/icon.png",
     * 
     *     "requires" : {
     *         "http://smartplatforms.org/terms#Problem": {
     *             "methods": ["GET"]
     *         }
     *     }
     * }
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}",
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordPha(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId) throws IOException;
    
    /**
     * Enable a userapp for a record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-pha-enable}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param phaId The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}",
            method = HttpMethod.PUT, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordPhaEnable(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId) throws IOException;
    
    /**
     * List record-app-specific documents.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-app-document-list}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param phaId The email identifier of the Indivo user app
     * @param status The account or document status to filter by
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param type The Indivo document type to filter by
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * 
     * @throws IOException if not successful
     * 
     * @return list of documents
     * Example Return Value:
     * <Documents record_id="123" total_document_count="4" pha="problems@apps.indivo.org">
     *   <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *     <createdAt>2009-05-04T17:05:33</createdAt>
     *     <creator id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </creator>
     *     <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *     <suppressor id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </suppressor>
     *     <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *     <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *     <label>HBA1C reading Preferences</label>
     *     <status>active</status>
     *     <nevershare>false</nevershare>
     *     <relatesTo>
     *       <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *       <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *     </relatesTo>
     *     <isRelatedFrom>
     *       <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *     </isRelatedFrom>
     *   </Document>
     * 
     *   ...
     * 
     * </Documents>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}/documents/",
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String  recordAppDocumentList(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId,
            @RestUriParam("status") @Optional String status,
            @RestUriParam("order_by") @Optional String orderBy,
            @RestUriParam("type") @Optional String type,
            @RestUriParam("limit") @Optional String limit,
            @RestUriParam("offset") @Optional String offset) throws IOException;

    /**
     * Create a record-app-specific Indivo document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-app-document-create}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param phaId The email identifier of the Indivo user app
     * @param document The raw content of the document to create.
     * 
     * @throws IOException if not successful
     * 
     * @return metadata of the created document
     * Example Return Value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading Preferences</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}/documents/",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordAppDocumentCreate(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId,
                                    String document) throws IOException;
    
    /**
     * Create or Overwrite a record-app-specific Indivo document with an associated external id.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-app-document-create-or-update-ext}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param externalId The external identifier of the desired resource
     * @param phaId The email identifier of the Indivo user app
     * @param document The raw content of the document to create/update.
     * 
     * @throws IOException if not successful
     * 
     * @return metadata of the created document
     * Example Return Value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="problems@apps.indivo.org" type="pha">
     *   </creator>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading preferences</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}/documents/external/{external_id}",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordAppDocumentCreateOrUpdateExt(@RestUriParam("record_id") String recordId,
            @RestUriParam("external_id") String externalId,
            @RestUriParam("pha_id") String phaId,
                                    String document) throws IOException;
    
    /**
     * Fetch the metadata of a record-app-specific document
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-app-document-meta}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param phaId The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return metadata describing the specified document
     * Example Return Value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="problems@apps.indivo.org" type="pha">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading Preferences</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *    <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *    <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *  </relatesTo>
     *   <isRelatedFrom>
     *    <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *  </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}/documents/{document_id}/meta",
            method = HttpMethod.GET, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordAppDocumentMeta(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestUriParam("pha_id") String phaId) throws IOException;
    
    /**
     * Fetch the metadata of a record-app-specific document identified by external id.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-app-document-meta-ext}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param externalId The external identifier of the desired resource
     * @param phaId The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return metadata describing the specified document
     * Example Return Value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="problems@apps.indivo.org" type="pha">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading Preferences</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}/documents/external/{external_id}/meta",
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordAppDocumentMetaExt(@RestUriParam("record_id") String recordId,
            @RestUriParam("external_id") String externalId,
            @RestUriParam("pha_id") String phaId) throws IOException;
 
    /**
     * Delete a record-app-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-app-document-delete}
     *
     * @param recordId The id string associated with the Indivo record
     * @param phaId The email identifier of the Indivo user app
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}/documents/{document_id}",
            method = HttpMethod.DELETE,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordAppDocumentDelete(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId,
            @RestUriParam("document_id") String documentId) throws IOException;

    /**
     * Retrieve a record-app-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-app-specific-document}
     *
     * @param recordId The id string associated with the Indivo record
     * @param phaId The email identifier of the Indivo user app
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return raw content of the document
     * Example return value:
     * 
     * <ProblemsPreferences record_id="123">
     *   <Preference name="hide_void" value="true" />
     *   <Preference name="show_rels" value="false" />
     * </ProblemsPreferences>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}/documents/{document_id}",
            method = HttpMethod.DELETE,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordAppSpecificDocument(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId,
            @RestUriParam("document_id") String documentId) throws IOException;
    
    /**
     * Set the label of a record-app-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-app-document-label}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param phaId The email identifier of the Indivo user app
     * @param documentId The unique identifier of the Indivo document
     * @param label The new label for the document
     * 
     * @throws IOException if not successful
     * 
     * @return metadata describing the re-labeled document
     * 
     * Example return value:
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>RELABELED: New HBA1C reading Preferences</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}/documents/{document_id}",
            method = HttpMethod.PUT,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordAppDocumentLabel(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId,
            @RestUriParam("document_id") String documentId,
                                        String label) throws IOException;    
    
    /**
     * Bind an app to a record without user authorization.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-pha-setup}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param phaId The email identifier of the Indivo user app
     * @param setupDocument Raw content that will be used as a setup document for the record
     * 
     * @throws IOException if not successful
     * 
     * @return a valid access token for the newly set up app.
     * 
     * Example return value:
     * 
     * oauth_token=abcd1fw3gasdgh3&oauth_token_secret=jgrlhre4291hfjas&xoauth_indivo_record_id=123
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/apps/{pha_id}/setup",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordPhaSetup(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId,
            @Optional String setupDocument) throws IOException;
    
    /**
     * Return audits of calls touching record.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:audit-record-view}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws IOException if not successful
     * 
     * @return list of Audit Reports.
     * 
     * Example return value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <Filters>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *     </Meta>
     *     <Item>
     *       <AuditEntry>
     *         <BasicInfo datetime="2011-04-27T17:32:23Z" view_func="get_document" request_successful="true" />
     *         <PrincipalInfo effective_principal="myapp@apps.indivoheatlh.org" proxied_principal="me@indivohealth.org" />
     *         <Resources carenet_id="" record_id="123" pha_id="" document_id="234" external_id="" message_id="" />
     *         <RequestInfo req_url="/records/123/documents/acd/" req_ip_address="127.0.0.1" req_domain="localhost"  req_method="GET" />
     *         <ResponseInfo resp_code="200" />
     *       </AuditEntry>
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/audits/",
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String auditRecordView(@RestUriParam("record_id") String recordId,
            @RestQueryParam("order_by") @Optional String orderBy,
            @RestQueryParam("limit") @Optional String limit,
            @RestQueryParam("offset") @Optional String offset) throws IOException;
    
    /**
     * Return audits of calls touching record and document_id.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:audit-document-view}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws IOException if not successful
     * 
     * @return list of Audit Reports.
     * 
     * Example return value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <Filters>
     *          <Filter name="document_id" value="234"/>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *     </Meta>
     *     <Item>
     *       <AuditEntry>
     *         <BasicInfo datetime="2011-04-27T17:32:23Z" view_func="get_document" request_successful="true" />
     *         <PrincipalInfo effective_principal="myapp@apps.indivoheatlh.org" proxied_principal="me@indivohealth.org" />
     *         <Resources carenet_id="" record_id="123" pha_id="" document_id="234" external_id="" message_id="" />
     *         <RequestInfo req_url="/records/123/documents/acd/" req_ip_address="127.0.0.1" req_domain="localhost"  req_method="GET" />
     *         <ResponseInfo resp_code="200" />
     *       </AuditEntry>
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/audits/documents/{document_id}/",
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String auditDocumentView(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestQueryParam("order_by") @Optional String orderBy,
            @RestQueryParam("limit") @Optional String limit,
            @RestQueryParam("offset") @Optional String offset) throws IOException;
     
    /**
     * Return audits of calls to function_name touching record and document_id.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:audit-function-view}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param functionName The internal Indivo function name called by the API request 
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws IOException if not successful
     * 
     * @return list of Audit Reports.
     * 
     * Example return value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <Filters>
     *         <Filter name="document_id" value="234"/>
     *         <Filter name="req_view_func" value="record_specific_document"/>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *     </Meta>
     *     <Item>
     *       <AuditEntry>
     *         <BasicInfo datetime="2011-04-27T17:32:23Z" view_func="get_document" request_successful="true" />
     *         <PrincipalInfo effective_principal="myapp@apps.indivoheatlh.org" proxied_principal="me@indivohealth.org" />
     *         <Resources carenet_id="" record_id="123" pha_id="" document_id="234" external_id="" message_id="" />
     *         <RequestInfo req_url="/records/123/documents/acd/" req_ip_address="127.0.0.1" req_domain="localhost"  req_method="GET" />
     *         <ResponseInfo resp_code="200" />
     *       </AuditEntry>
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/audits/documents/{document_id}/functions/{function_name}",
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String auditFunctionView(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestUriParam("function_name") String functionName,
            @RestQueryParam("order_by") @Optional String orderBy,
            @RestQueryParam("limit") @Optional String limit,
            @RestQueryParam("offset") @Optional String offset) throws IOException;
     

    /**
     * Select Audit Objects via the Query API Interface.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:audit-query}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param status The account or document status to filter by
     * @param fieldName See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields), Querying the Audit System (http://indivo-x.readthedocs.org/en/latest/audit.html#audit-query-fields)
     * @param fieldValue See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields), Querying the Audit System (http://indivo-x.readthedocs.org/en/latest/audit.html#audit-query-fields)
     * @param dateGroup See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param groupBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param aggregateBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param dateRange See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return A list of audit records
     * Example Return Value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <DateRange value="date_measured*1995-03-10T00:00:00Z*" />
     *     <Filters>
     *          <Filter name="document_id" value="234"/>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *     </Meta>
     *     <Item>
     *       <AuditEntry>
     *         <BasicInfo datetime="2011-04-27T17:32:23Z" view_func="get_document" request_successful="true" />
     *         <PrincipalInfo effective_principal="myapp@apps.indivoheatlh.org" proxied_principal="me@indivohealth.org" />
     *         <Resources carenet_id="" record_id="123" pha_id="" document_id="234" external_id="" message_id="" />
     *         <RequestInfo req_url="/records/123/documents/acd/" req_ip_address="127.0.0.1" req_domain="localhost"  req_method="GET" />
     *         <ResponseInfo resp_code="200" />
     *       </AuditEntry>
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @Processor
    public InputStream auditQuery(String recordId, 
                                          @Optional String status,
                                          @Optional String fieldName,
                                          @Optional String fieldValue,                                          
                                          @Optional String dateGroup,
                                          @Optional String groupBy,
                                          @Optional String orderBy,
                                          @Optional String aggregateBy,
                                          @Optional String dateRange,
                                          @Optional String limit,
                                          @Optional String offset) throws Exception
    {
        final String apiUrl = getApiUrl("records/" + recordId + "/audits/query/");

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        
        /*
        Query Parameters:

        status Ð The account or document status to filter by
        {FIELD} Ð See Query Operators, Valid Query Fields
        date_group Ð See Query Operators
        group_by Ð See Query Operators
        order_by Ð See Query Operators
        aggregate_by Ð See Query Operators
        date_range Ð See Query Operators
        limit Ð See Query Operators
        offset Ð See Query Operators
         */

        if (!StringUtils.isEmpty(status))
            r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(fieldName) && !StringUtils.isEmpty(fieldValue))
            r = r.queryParam(fieldName, fieldValue);
        if (!StringUtils.isEmpty(dateGroup))
            r = r.queryParam("date_group", dateGroup);
        if (!StringUtils.isEmpty(groupBy))
            r = r.queryParam("group_by", groupBy);                
        if (!StringUtils.isEmpty(orderBy))
            r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(aggregateBy))
            r = r.queryParam("aggregate_by", aggregateBy);
        if (!StringUtils.isEmpty(dateRange))
            r = r.queryParam("date_range", dateRange);
        if (!StringUtils.isEmpty(limit))
            r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
            r = r.queryParam("offset", offset);
        
        InputStream response = r.get(InputStream.class);

        return response;
    }
    
    /**
     * For a single record, list all carenets that a given doctype is autoshared with.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:autoshare-list}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param type The document schema type to check autoshares for. REQUIRED.
     * 
     * @throws IOException if not successful
     * 
     * @return a list of carenets
     * 
     * Example return value:
     * 
     * <Carenets record_id="123">
     *   <Carenet id="789" name="Work/School" mode="explicit" />
     * 
     *   ...
     * 
     * </Carenets>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/autoshare/bytype/",
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String autoshareList(@RestUriParam("record_id") String recordId,
            @RestQueryParam("type") String type) throws IOException;    
    
    /**
     * For a single record, list all doctypes autoshared into carenets.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:autoshare-list-by-type-all}
     * 
     * @param recordId The id string associated with the Indivo record
     * 
     * @throws IOException if not successful
     * 
     * @return a list of doctypes and their shared carenets.
     * 
     * Example return value:
     * 
     * <DocumentSchemas>
     *   <DocumentSchema type="http://indivo.org/vocab/xml/documents#Medication">
     *     <Carenet id="123" name="Family" mode="explicit" />
     * 
     *     ...
     * 
     *   </DocumentSchema>
     * 
     *   ...
     * 
     * </DocumentSchemas>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/autoshare/bytype/all",
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String autoshareListByTypeAll(@RestUriParam("record_id") String recordId) throws IOException;    
    
    /**
     * Automatically share all documents of a certain type into a carenet.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:autoshare-create}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param carenetId The id string associated with the Indivo carenet
     * @param type the document schema type to create an autoshare for
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/autoshare/carenets/{carenet_id}/bytype/set",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String autoshareCreate(@RestUriParam("record_id") String recordId,
            @RestUriParam("carenet_id") String carenetId,
            @RestPostParam("type") String type) throws IOException;    
    
    /**
     * Remove an autoshare from a carenet.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:autoshare-delete}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param carenetId The id string associated with the Indivo carenet
     * @param type the document schema type to create an autoshare for
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/autoshare/carenets/{carenet_id}/bytype/unset",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String autoshareDelete(@RestUriParam("record_id") String recordId,
            @RestUriParam("carenet_id") String carenetId,
            @RestPostParam("type") String type) throws IOException;    

    /**
     * List all carenets for a record.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-list}
     * 
     * @param recordId The id string associated with the Indivo record
     * 
     * @throws IOException if not successful
     * 
     * @return a list of carenets.
     * 
     * Example return value:
     * 
     * <Carenets record_id="123">
     *   <Carenet id="789" name="Work/School" mode="explicit" />
     * 
     *   ...
     * 
     * </Carenets>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/carenets/",
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetList(@RestUriParam("record_id") String recordId) throws IOException;    
    
    /**
     * Create a new carenet for a record.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-create}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param label The label for the new carenet.
     * 
     * @throws IOException if not successful
     * 
     * @return  a description of the new carenet
     * 
     * Example return value:
     * 
     * <Carenets record_id="123">
     *   <Carenet id="789" name="Work/School" mode="explicit" />
     * </Carenets>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/carenets/",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetCreate(@RestUriParam("record_id") String recordId,
            @RestPostParam("label") String label) throws IOException;    
    
    /**
     * Read demographics from a record.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:read-demographics}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param responseFormat response_format Ð one of rdfxml (SMART RDF/XML), json (SDMJ), or xml (SDMX). Default is rdfxml
     * 
     * @throws IOException if not successful
     * 
     * @return demographics formatted in the requested response_format (default application/rdf+xml) on success
     * 
     * Example return value:
     * 
     * application/rdf+xml:
     * 
     *     <?xml version="1.0" encoding="UTF-8"?>
     *     <rdf:RDF xmlns:dcterms="http://purl.org/dc/terms/"
     *          xmlns:foaf="http://xmlns.com/foaf/0.1/"
     *          xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     *          xmlns:sp="http://smartplatforms.org/terms#"   xmlns:v="http://www.w3.org/2006/vcard/ns#">
     *     <rdf:Description rdf:nodeID="_6730841b-05df-445f-8695-ed64197f4e6a">
     *         <v:family-name>William</v:family-name>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Name"/>
     *         <v:given-name>Robinson</v:given-name>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_bcf66b59-e438-49b2-b572-99af4319b297">
     *         <rdf:value>800-870-3011</rdf:value>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Tel"/>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Home"/>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Pref"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_8cbe3da1-fb53-4d31-80b6-19e0d04220ad">
     *         <dcterms:identifier>http://indivo.org/records/96ff9eb2-3b18-4a0e-9df8-5a731b96d5d6</dcterms:identifier>
     *         <sp:system>Indivo Record</sp:system>
     *         <dcterms:title>Indivo Record 96ff9eb2-3b18-4a0e-9df8-5a731b96d5d6</dcterms:title>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_451ade87-b519-4c92-8d07-2bbfcb23999c">
     *         <rdf:value>800-870-3011</rdf:value>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Tel"/>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Home"/>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Pref"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://indivo.org/records/96ff9eb2-3b18-4a0e-9df8-5a731b96d5d6">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#MedicalRecord"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://indivo.org/records/96ff9eb2-3b18-4a0e-9df8-5a731b96d5d6/demographics">
     *         <v:tel rdf:nodeID="_bcf66b59-e438-49b2-b572-99af4319b297"/>
     *         <v:tel rdf:nodeID="_451ade87-b519-4c92-8d07-2bbfcb23999c"/>
     *         <sp:email>william.robinson@example.com</sp:email>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Demographics"/>
     *         <v:bday rdf:datatype="http://www.w3.org/2001/XMLSchema#date">1965-08-09</v:bday>
     *         <v:adr rdf:nodeID="_9f06ee63-3704-4b2a-9c2a-109cc9c99a57"/>
     *         <sp:belongsTo rdf:resource="http://indivo.org/records/96ff9eb2-3b18-4a0e-9df8-5a731b96d5d6"/>
     *         <foaf:gender>male</foaf:gender>
     *         <sp:preferredLanguage>EN</sp:preferredLanguage>
     *         <v:n rdf:nodeID="_6730841b-05df-445f-8695-ed64197f4e6a"/>
     *         <sp:medicalRecordNumber rdf:nodeID="_8cbe3da1-fb53-4d31-80b6-19e0d04220ad"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_9f06ee63-3704-4b2a-9c2a-109cc9c99a57">
     *         <v:street-address>23 Church Rd</v:street-address>
     *         <v:country>USA</v:country>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Address"/>
     *         <v:region>OK</v:region>
     *         <v:locality>Bixby</v:locality>
     *         <v:postal-code>74008</v:postal-code>
     *     </rdf:Description>
     * </rdf:RDF>
     * 
     * application/xml:
     * 
     *     <Models>
     *         <Model name="Demographics" documentId="44190967-cbaa-43a7-a98c-9f97f094ef2b">
     *             <Field name="bday">1965-08-09</Field>
     *             <Field name="email">william.robinson@example.com</Field>
     *             <Field name="ethnicity"/>
     *             <Field name="gender">male</Field>
     *             <Field name="preferred_language">EN</Field>
     *             <Field name="race"/>
     *             <Field name="name_given">Robinson</Field>
     *             <Field name="name_suffix"/>
     *             <Field name="name_family">William</Field>
     *             <Field name="name_prefix"/>
     *             <Field name="tel_2_type">h</Field>
     *             <Field name="tel_2_preferred_p">True</Field>
     *             <Field name="tel_2_number">800-870-3011</Field>
     *             <Field name="adr_region">OK</Field>
     *             <Field name="adr_country">USA</Field>
     *             <Field name="adr_postalcode">74008</Field>
     *             <Field name="adr_city">Bixby</Field>
     *             <Field name="adr_street">23 Church Rd</Field>
     *             <Field name="tel_1_type">h</Field>
     *             <Field name="tel_1_preferred_p">True</Field>
     *             <Field name="tel_1_number">800-870-3011</Field>
     *         </Model>
     *     </Models>
     * 
     * application/json:
     * 
     *     [
     *         {
     *             "__modelname__": "Demographics",
     *             "__documentid__": "44190967-cbaa-43a7-a98c-9f97f094ef2b",
     *             "name_given": "Robinson",
     *             "name_family": "William",
     *             "name_prefix": null,
     *             "name_suffix": null,
     *             "gender": "male",
     *             "race": null,
     *             "ethnicity": null,
     *             "bday": "1965-08-09",
     *             "email": "william.robinson@example.com",
     *             "preferred_language": "EN",
     *             "tel_1_type": "h",
     *             "tel_1_number": "800-870-3011",
     *             "tel_1_preferred_p": true,
     *             "tel_2_type": "h",
     *             "tel_2_number": "800-870-3011",
     *             "tel_2_preferred_p": true,
     *             "adr_street": "23 Church Rd",
     *             "adr_city": "Bixby",
     *             "adr_postalcode": "74008",
     *             "adr_region": "OK",
     *             "adr_country": "USA"
     *         }
     *     ]
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/demographics",
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String readDemographics(@RestUriParam("record_id") String recordId,
            @RestQueryParam("response_format") @Optional @Default("rdfxml") DemographicsResponseFormat responseFormat) throws IOException;    
    
    /**
     * Create or update demographics on a record.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:set-demographics}
     * 
     * @param recordId The id string associated with the Indivo record
     * 
     * @throws IOException if not successful
     * 
     * @return metadata on the updated document
     * 
     * Example return value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="http://indivo.org/vocab/xml/documents#Demographics" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/demographics",
            method = HttpMethod.PUT, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String setDemographics(@RestUriParam("record_id") String recordId) throws IOException;    
    
    /**
     * Delete all documents associated with a record.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:documents-delete}
     * 
     * @param recordId The id string associated with the Indivo record
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/",
            method = HttpMethod.DELETE, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentsDelete(@RestUriParam("record_id") String recordId) throws IOException;    
    
    /**
     * List record-specific documents.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-document-list}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param status The account or document status to filter by
     * @param type The Indivo document type to filter by
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws IOException if not successful
     * 
     * @return list of documents
     * 
     * Example Return Value:
     * <Documents record_id="123" total_document_count="4">
     *   <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *     <createdAt>2009-05-04T17:05:33</createdAt>
     *     <creator id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </creator>
     *     <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *     <suppressor id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </suppressor>
     *     <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *     <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *     <label>HBA1C reading</label>
     *     <status>active</status>
     *     <nevershare>false</nevershare>
     *     <relatesTo>
     *       <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *       <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *     </relatesTo>
     *     <isRelatedFrom>
     *       <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *     </isRelatedFrom>
     *   </Document>
     * 
     *   ...
     * 
     * </Documents>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/",
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordDocumentList(@RestUriParam("record_id") String recordId,
            @RestQueryParam("type") String type,
            @RestQueryParam("order_by") @Optional String orderBy,
            @RestQueryParam("limit") @Optional String limit,
            @RestQueryParam("offset") @Optional String offset) throws IOException;  
    
    /**
     * Create a record-specific Indivo Document.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-create}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param document The raw content of the document to create.
     * 
     * @throws IOException if not successful
     * 
     * @return  the metadata of the created document
     * 
     * Example return value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentCreate(@RestUriParam("record_id") String recordId,
            String document) throws IOException;    
    
    /**
     * Create a record-specific Indivo Document with an associated external id.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-create-by-ext-id}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param externalId The external identifier of the desired resource
     * @param phaId The email identifier of the Indivo user app
     * @param document The raw content of the document to create.
     * 
     * @throws IOException if not successful
     * 
     * @return the metadata of the created document
     * 
     * Example return value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/external/{pha_id}/{external_id}",
            method = HttpMethod.PUT, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentCreateByExtId(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId,
            @RestUriParam("external_id") String externalId,
            String document) throws IOException;    
    
    /**
     * Set the label of a record-specific document, specified by external id.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-document-label-ext}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param externalId The external identifier of the desired resource
     * @param phaId The email identifier of the Indivo user app
     * @param label The new label for the document
     * 
     * @throws IOException if not successful
     * 
     * @return the metadata describing the re-labeled document
     * 
     * Example return value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>RELABELED: New HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/external/{pha_id}/{external_id}/label",
            method = HttpMethod.PUT, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordDocumentLabelExt(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId,
            @RestUriParam("external_id") String externalId,
            String label) throws IOException;    

    /**
     * Fetch the metadata of a record-specific document identified by external id
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-document-meta-ext}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param externalId The external identifier of the desired resource
     * @param phaId The email identifier of the Indivo user app
     * 
     * @throws IOException if not successful
     * 
     * @return the document metadata
     * 
     * Example return value:
     * 
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/external/{pha_id}/{external_id}/meta",
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordDocumentMetaExt(@RestUriParam("record_id") String recordId,
            @RestUriParam("pha_id") String phaId,
            @RestUriParam("external_id") String externalId) throws IOException;    
    
    /**
     * Create a new relationship between two existing documents.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-rels}
     *
     * @param recordId The id string associated with the Indivo record
     * @param subjectRelDocumentId The id of the document that is the subject of the relationship, i.e. subjectRelDocumentId annotates objectRelDocumentId
     * @param objectRelDocumentId The id of the document that is the object of the relationship, i.e. objectRelDocumentId is annotated by subjectRelDocumentId
     * @param rel The type of relationship between the documents, i.e. annotation, interpretation
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{object_rel_document_id}/rels/{rel}/{subject_rel_document_id}",
            method = HttpMethod.PUT,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentRels(@RestUriParam("record_id") String recordId,
            @RestUriParam("object_rel_document_id") String objectRelDocumentId,
            @RestUriParam("subject_rel_document_id") String subjectRelDocumentId,
            @RestUriParam("rel") String rel) throws IOException;

    /**
     * Retrieve a record-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-specific-document}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return the raw content of the document
     * 
     * Example Return Value:
     * <HBA1C xmlns="http://indivo.org/vocab#" value="5.3" unit="percent" datetime="2011-01-15T17:00:00.000Z" />
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}",
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordSpecificDocument(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId) throws IOException;

    /**
     * List all the carenets into which a document has been shared.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-carenets}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return list of carenets.
     * 
     * Example Return Value:
     * <Carenets record_id="123">
     *   <Carenet id="789" name="Work/School" mode="explicit" />
     * 
     *   ...
     * 
     * </Carenets>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/carenets",
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentCarenets(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId) throws IOException;

    /**
     * Unshare a document from a given carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-document-delete}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param carenetId The id string associated with the Indivo carenet
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/carenets/{carenet_id}",
            method = HttpMethod.DELETE,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetDocumentDelete(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestUriParam("carenet_id") String carenetId) throws IOException;

    /**
     * Place a document into a given carenet.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:carenet-document-placement}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param carenetId The id string associated with the Indivo carenet
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/carenets/{carenet_id}",
            method = HttpMethod.PUT,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String carenetDocumentPlacement(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestUriParam("carenet_id") String carenetId) throws IOException;

    /**
     * Revert the document-sharing of a document in a carent to whatever rules are specified by autoshares. NOT IMPLEMENTED BY INDIVO AS OF 2.2.0.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:autoshare-revert}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param carenetId The id string associated with the Indivo carenet
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/carenets/{carenet_id}/autoshare-revert",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String autoshareRevert(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestUriParam("carenet_id") String carenetId) throws IOException;

    /**
     * Set the label of a record-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-document-label}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param label The new label for the document
     * 
     * @throws IOException if not successful
     * 
     * @return metadata describing the re-labeled document
     * 
     * Example Return Value:
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>RELABELED: New HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/label",
            method = HttpMethod.PUT,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordDocumentLabel(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            String label) throws IOException;

    /**
     * Fetch the metadata of a record-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-document-meta}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return the document metadata
     * 
     * Example Return Value:
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>New HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/meta",
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordDocumentMeta(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId) throws IOException;

    /**
     * Set metadata fields on a document. NOT IMPLEMENTED AS OF INDIVO 2.0.0.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:update-document-meta}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/meta",
            method = HttpMethod.PUT,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String updateDocumentMeta(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId) throws IOException;
    
    /**
     * Remove the nevershare flag from a document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-remove-nevershare}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/nevershare",
            method = HttpMethod.DELETE,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentRemoveNevershare(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId) throws IOException;

    /**
     * Flag a document to never be shared, anywhere.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-set-nevershare}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/nevershare",
            method = HttpMethod.PUT,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentSetNevershare(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId) throws IOException;
    
    /**
     * Get all documents related to the passed document_id by a relation of the passed relation-type.
     * 
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:get-documents-by-rel}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param rel The type of relationship between the documents, i.e. annotation, interpretation
     * @param status The account or document status to filter by
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws IOException if not successful
     * 
     * @return list of related documents
     * 
     * Example return value:
     * 
     * <Documents record_id="123" total_document_count="4">
     *   <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *     <createdAt>2009-05-04T17:05:33</createdAt>
     *     <creator id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </creator>
     *     <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *     <suppressor id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </suppressor>
     *     <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *     <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *     <label>HBA1C reading</label>
     *     <status>active</status>
     *     <nevershare>false</nevershare>
     *     <relatesTo>
     *       <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *       <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *     </relatesTo>
     *     <isRelatedFrom>
     *       <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *     </isRelatedFrom>
     *   </Document>
     * 
     *   ...
     * 
     * </Documents>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/audits/documents/{document_id}/rels/{rel}",
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String getDocumentsByRel(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestUriParam("rel") String rel,
            @RestQueryParam("status") @Optional Status status,            
            @RestQueryParam("order_by") @Optional String orderBy,
            @RestQueryParam("limit") @Optional String limit,
            @RestQueryParam("offset") @Optional String offset) throws IOException;
     
    /**
     * Create a document and relate it to an existing document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-create-by-rel}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param rel The type of relationship between the documents, i.e. annotation, interpretation
     * @param document The raw content of the document to create.
     * 
     * @throws IOException if not successful
     * 
     * @return the metadata of the created document
     * 
     * Example Return Value:
     * <Document id="238543a5-e516-4da2-8a70-8c764c65a5a7" type="" size="104" digest="6aaef7aa0fbc24eef18f6cde0bc17120cbea6f35" record_id="e32c3daf-33e3-443e-aa4a-fad22fe559cc">
     *     <createdAt>2012-07-10T14:58:36.805563Z</createdAt>
     *     <creator id="bob@indivo.org" type="account">
     *         <fullname>Bob Loblaw</fullname>
     *     </creator>
     *     <original id="238543a5-e516-4da2-8a70-8c764c65a5a7"/>
     *     <status>active</status>
     *     <nevershare>false</nevershare>
     *     <isRelatedFrom>
     *         <relation type="http://indivo.org/vocab/documentrels#annotation" count="1" />
     *     </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/rels/{rel}/",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentCreateByRel(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestUriParam("rel") String rel,
            String document) throws IOException;

    /**
     * Create a document, assign it an external id, and relate it to an existing document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-create-by-rel-with-ext-id}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param rel The type of relationship between the documents, i.e. annotation, interpretation
     * @param phaId The email identifier of the Indivo user app
     * @param externalId The external identifier of the desired resource
     * @param document The raw content of the document to create.
     * 
     * @throws IOException if not successful
     * 
     * @return the metadata of the created document
     * 
     * Example Return Value:
     * <Document id="238543a5-e516-4da2-8a70-8c764c65a5a7" type="" size="104" digest="6aaef7aa0fbc24eef18f6cde0bc17120cbea6f35" record_id="e32c3daf-33e3-443e-aa4a-fad22fe559cc">
     *     <createdAt>2012-07-10T14:58:36.805563Z</createdAt>
     *     <creator id="bob@indivo.org" type="account">
     *         <fullname>Bob Loblaw</fullname>
     *     </creator>
     *     <original id="238543a5-e516-4da2-8a70-8c764c65a5a7"/>
     *     <status>active</status>
     *     <nevershare>false</nevershare>
     *     <isRelatedFrom>
     *         <relation type="http://indivo.org/vocab/documentrels#annotation" count="1" />
     *     </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/rels/{rel}/external/{pha_id}/{external_id}",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentCreateByRelWithExtId(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestUriParam("rel") String rel,
            @RestUriParam("pha_id") String phaId,
            @RestUriParam("external_id") String externalId, 
            String document) throws IOException;
        
    /**
     * Create a new version of a record-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-version}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param document The raw content of the document to create.
     * 
     * @throws IOException if not successful
     * 
     * @return the metadata of the new document
     * 
     * Example Return Value:
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <replaces id="abe8130e2-ba54-1234-eeef-45a3b6cd9a8e" />
     *   <original id="abe8130e2-ba54-1234-eeef-45a3b6cd9a8e" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/replace",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentVersion(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            String document) throws IOException;
    
    /**
     * Create a new version of a record-specific document and assign it an external id.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-version-by-ext-id}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param phaId The email identifier of the Indivo user app
     * @param externalId The external identifier of the desired resource
     * @param document The raw content of the document to create.
     * 
     * @throws IOException if not successful
     * 
     * @return the metadata of the new document
     * 
     * Example Return Value:
     * <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *   <createdAt>2009-05-04T17:05:33</createdAt>
     *   <creator id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </creator>
     *   <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *   <suppressor id="steve@indivo.org" type="account">
     *     <fullname>Steve Zabak</fullname>
     *   </suppressor>
     *   <replaces id="abe8130e2-ba54-1234-eeef-45a3b6cd9a8e" />
     *   <original id="abe8130e2-ba54-1234-eeef-45a3b6cd9a8e" />
     *   <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *   <label>HBA1C reading</label>
     *   <status>active</status>
     *   <nevershare>false</nevershare>
     *   <relatesTo>
     *     <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *     <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *   </relatesTo>
     *   <isRelatedFrom>
     *     <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *   </isRelatedFrom>
     * </Document>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/replace/external/{pha_id}/{external_id}",
            method = HttpMethod.PUT,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentVersionByExtId(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestUriParam("pha_id") String phaId,
            @RestUriParam("external_id") String externalId, 
            String document) throws IOException;    
    
    /**
     * Set the status of a record-specific document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-set-status}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param status The new status for the document. Options are active, void, archived.
     * @param reason The reason for the status change.
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/set-status",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentSetStatus(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestPostParam("status") Status status,
            @RestPostParam("reason") String reason) throws IOException;        
    
    /**
     * List all changes to a documentÕs status over time.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-status-history}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * 
     * @throws IOException if not successful
     * 
     * @return the documentÕs status history
     * 
     * Example Return Value:
     * <DocumentStatusHistory document_id="456">
     *   <DocumentStatus by="joeuser@indivo.example.org" at="2010-09-03T12:45:12Z" status="archived">
     *     <reason>no longer relevant</reason>
     *   </DocumentStatus>
     * 
     *   ...
     * 
     * </DocumentStatusHistory>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/status-history",
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentStatusHistory(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId) throws IOException;        
    
    /**
     * Retrieve the versions of a document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:document-versions}
     *
     * @param recordId The id string associated with the Indivo record
     * @param documentId The unique identifier of the Indivo document
     * @param status The account or document status to filter by
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws IOException if not successful
     * 
     * @return list of document versions
     * 
     * Example Return Value:
     * <Documents record_id="123" total_document_count="4">
     *   <Document id="14c81023-c84f-496d-8b8e-9438280441d3" type="" digest="7e9bc09276e0829374fd810f96ed98d544649703db3a9bc231550a0b0e5bcb1c" size="77">
     *     <createdAt>2009-05-04T17:05:33</createdAt>
     *     <creator id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </creator>
     *     <suppressedAt>2009-05-06T17:05:33</suppressedAt>
     *     <suppressor id="steve@indivo.org" type="account">
     *       <fullname>Steve Zabak</fullname>
     *     </suppressor>
     *     <original id="14c81023-c84f-496d-8b8e-9438280441d3" />
     *     <latest id="14c81023-c84f-496d-8b8e-9438280441d3" createdAt="2009-05-05T17:05:33" createdBy="steve@indivo.org" />
     *     <label>HBA1C reading</label>
     *     <status>active</status>
     *     <nevershare>false</nevershare>
     *     <relatesTo>
     *       <relation type="http://indivo.org/vocab/documentrels#attachment" count="1" />
     *       <relation type="http://indivo.org/vocab/documentrels#annotation" count="5" />
     *     </relatesTo>
     *     <isRelatedFrom>
     *       <relation type="http://indivo.org/vocab/documentrels#interpretation" count="1" />
     *     </isRelatedFrom>
     *   </Document>
     * 
     *   ...
     * 
     * </Documents>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/documents/{document_id}/versions/",
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String documentVersions(@RestUriParam("record_id") String recordId,
            @RestUriParam("document_id") String documentId,
            @RestQueryParam("status") @Optional Status status,            
            @RestQueryParam("order_by") @Optional String orderBy,
            @RestQueryParam("limit") @Optional String limit,
            @RestQueryParam("offset") @Optional String offset) throws IOException;        

    /**
     * Send a message to a record
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-send-message}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param messageId The unique external identifier of the Indivo Message, for idempotency.
     * @param body The message body. Defaults to [no body].
     * @param bodyType The formatting of the message body. Options are plaintext, markdown. Defaults to plaintext.
     * @param numAttachments The number of attachments this message requires. Attachments are uploaded with <indivo:record-message-attach ... />. Defaults to 0.    
     * @param severity The importance of the message. Options are low, medium, high. Defaults to low.
     * @param subject The message subject. Defaults to [no subject].
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/inbox/{message_id}", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordSendMessage(@RestUriParam("record_id") String recordId,
            @RestUriParam("message_id") String messageId,
            @RestPostParam("body") @Optional @Default("[no body]") String body,
            @RestPostParam("severity") @Optional @Default("low") Severity severity,
            @RestPostParam("body_type") @Optional @Default("plaintext") BodyType bodyType,
            @RestPostParam("num_attachments") String numAttachments,
            @RestPostParam("subject") @Optional @Default ("[no subject]") String subject) throws IOException;

    /**
     * Attach a document to an Indivo message.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-message-attach}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param messageId The unique external identifier of the Indivo Message
     * @param attachmentNum The 1-indexed number corresponding to the message attachment
     * @param attachment The raw XML attachment data.
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/inbox/{message_id}/attachments/{attachment_num}", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordMessageAttach(@RestUriParam("record_id") String recordId,
            @RestUriParam("message_id") String messageId,
            @RestUriParam("attachmentNum") String attachmentNum,
            String attachment) throws IOException;

    /**
     * Send a notification about a record to all accounts authorized to be notified.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-notify}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param content The plaintext content of the notification.
     * @param appUrl A callback url to the app for more information. OPTIONAL.
     * @param documentId The id of the document to which this notification pertains. OPTIONAL
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/notifications/", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordNotify(@RestUriParam("record_id") String recordId,
            @RestPostParam("content") String content,
            @RestPostParam("appUrl") @Optional String appUrl,
            @RestPostParam("documentId") @Optional String documentId) throws IOException;

    /**
     * Get the ownder of the record
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-get-owner}
     * 
     * @param recordId The id string associated with the Indivo record
     * 
     * @throws IOException if not successful
     * 
     * @return Owner ID
     * 
     * Example Return Value:
     * <Account id='joeuser@example.com' />
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/owner", 
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordGetOwner(@RestUriParam("record_id") String recordId) throws IOException;
    
    /**
     * Set the owner of a record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-set-owner}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param ownerId The email address of the new account owner.
     * 
     * @throws IOException if not successful
     * 
     * @return information about the account
     * 
     * Example Return Value:
     * <Account id="joeuser@indivo.example.org">
     *   <fullName>Joe User</fullName>
     *   <contactEmail>joeuser@gmail.com</contactEmail>
     *   <lastLoginAt>2010-05-04T15:34:23Z</lastLoginAt>
     *   <totalLoginCount>43</totalLoginCount>
     *   <failedLoginCount>0</failedLoginCount>
     *   <state>active</state>
     *   <lastStateChange>2009-04-03T13:12:12Z</lastStateChange>
     * 
     *   <authSystem name="password" username="joeuser" />
     *   <authSystem name="hospital_sso" username="Joe_User" />
     * </Account>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/owner", 
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordSetOwner(@RestUriParam("record_id") String recordId,
            String ownerId) throws IOException;

    /**
     * Export patient data as a Continuity of Care Record (CCR) document.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:report-ccr}
     * 
     * @param recordId The id string associated with the Indivo record
     * 
     * @throws IOException if not successful
     * 
     * @return EXPERIMENTAL CCR document.
     * 
     * Example Return Value:
     * <ContinuityOfCareRecord xmlns="urn:astm-org:CCR">
     *   <CCRDocumentObjectID>0</CCRDocumentObjectID>
     *   <Language>
     *     <Text>ENGLISH</Text>
     *   </Language>
     *   <Version>V1.0</Version>
     *   <DateTime>
     *     <Type>
     *       <Text>Create</Text>
     *       <ObjectAttribute>
     *         <Attribute>DisplayDate</Attribute>
     *         <AttributeValue>
     *           <Value>09/30/10</Value>
     *         </AttributeValue>
     *       </ObjectAttribute>
     *     </Type>
     *     <ExactDateTime>2010-05-04T15:34:23Z</ExactDateTime>
     *   </DateTime>
     *   <Patient>
     *     <ActorID>123</ActorID>
     *   </Patient>
     *   <From>
     *     <ActorLink/>
     *   </From>
     *   <Body>
     *     <Medications>
     *       <Medication>
     *      <CCRDataObjectID>789</CCRDataObjectID>
     *      <DateTime>
     *        <Type>
     *          <Text>Dispense date</Text>
     *        </Type>
     *        <ExactDateTime>2010-05-04T15:34:23Z</ExactDateTime>
     *      </DateTime>
     *      <Status>
     *        <Text>Active</Text>
     *      </Status>
     *      <Product>
     *        <ProductName>
     *          <Text>Vioxx</Text>
     *          <Code>
     *            <Value>C1234</Value>
     *            <CodingSystem>RxNorm</CodingSystem>
     *          </Code>
     *        </ProductName>
     *        <Strength>
     *          <Value>20</Value>
     *          <Units>
     *            <Unit>mg</Unit>
     *          </Units>
     *        </Strength>
     *      </Product>
     *      <Directions>
     *           <Direction>
     *             <Dose>
     *               <Value>1</Value>
     *               <Units>
     *              <Unit>Pills</Unit>
     *               </Units>
     *             </Dose>
     *             <Route>
     *               <Text>Oral</Text>
     *             </Route>
     *             <Frequency>
     *               <Value>1QR</Value>
     *             </Frequency>
     *           </Direction>
     *      </Directions>
     *      </Medication>
     * 
     *       ...
     * 
     *     </Medications>
     *     <Immunizations>
     *       <Immunization>
     *         <CCRDataObjectID>567</CCRDataObjectID>
     *      <DateTime>
     *           <Type>
     *            <Text>Start date</Text>
     *           </Type>
     *        <ExactDateTime>2010-05-04T15:34:23Z</ExactDateTime>
     *      </DateTime>
     *       <Product>
     *         <ProductName>
     *           <Text>Rubella</Text>
     *           <Code>
     *             <Value>C1345</Value>
     *             <CodingSystem>HL7 Vaccines</CodingSystem>
     *           </Code>
     *         </ProductName>
     *       </Product>
     *       </Immunization>
     * 
     *       ...
     * 
     *     </Immunizations>
     *     <VitalSigns>
     * 
     *     ...
     * 
     *     </VitalSigns>
     * 
     *     ...
     * 
     *   </Body>
     *   <Actors>
     *   </Actors>
     * </ContinuityOfCareRecord>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/reports/experimental/ccr", 
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String reportCcr(@RestUriParam("record_id") String recordId) throws IOException;
    
    /**
     * List the equipment data for a given record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:equipment-list}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param status The account or document status to filter by
     * @param fieldName See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param fieldValue See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param dateGroup See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param groupBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param aggregateBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param dateRange See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return A list of equipment
     * Example Return Value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <DateRange value="date_measured*1995-03-10T00:00:00Z*" />
     *     <Filters>
     *       <Filter name="equipment_name" value="pacemaker"/>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *       <Document id="261ca370-927f-41af-b001-7b615c7a468e" type="http://indivo.org/vocab/xml/documents#Models" size="1653" digest="0799971784e5a2d199cd6585415a8cd57f7bf9e4f8c8f74ef67a1009a1481cd6" record_id="">
     *         <createdAt>2011-05-02T17:48:13Z</createdAt>
     *         <creator id="mymail@mail.ma" type="Account">
     *           <fullname>full name</fullname>
     *         </creator>
     *         <original id="261ca370-927f-41af-b001-7b615c7a468e"/>
     *         <label>testing</label>
     *         <status>active</status>
     *         <nevershare>false</nevershare>
     *       </Document>
     *     </Meta>
     *     <Item>
     *       <Equipment xmlns="http://indivo.org/vocab/xml/documents#">
     *         <dateStarted>2009-02-05</dateStarted>
     *         <dateStopped>2010-06-12</dateStopped>
     *         <type>cardiac</type>
     *         <name>Pacemaker</name>
     *         <vendor>Acme Medical Devices</vendor>
     *         <id>167-ABC-23</id>
     *         <description>it works</description>
     *         <specification>blah blah blah</specification>
     *       </Equipment>
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @Processor
    public InputStream equipmentList(String recordId, 
                                          @Optional String status,
                                          @Optional String fieldName,
                                          @Optional String fieldValue,                                          
                                          @Optional String dateGroup,
                                          @Optional String groupBy,
                                          @Optional String orderBy,
                                          @Optional String aggregateBy,
                                          @Optional String dateRange,
                                          @Optional String limit,
                                          @Optional String offset) throws Exception
    {
        final String apiUrl = getApiUrl("records/" + recordId + "/reports/minimal/equipment/");

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        
        /*
        Query Parameters:

        status Ð The account or document status to filter by
        {FIELD} Ð See Query Operators, Valid Query Fields
        date_group Ð See Query Operators
        group_by Ð See Query Operators
        order_by Ð See Query Operators
        aggregate_by Ð See Query Operators
        date_range Ð See Query Operators
        limit Ð See Query Operators
        offset Ð See Query Operators
         */

        if (!StringUtils.isEmpty(status))
            r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(fieldName) && !StringUtils.isEmpty(fieldValue))
            r = r.queryParam(fieldName, fieldValue);
        if (!StringUtils.isEmpty(dateGroup))
            r = r.queryParam("date_group", dateGroup);
        if (!StringUtils.isEmpty(groupBy))
            r = r.queryParam("group_by", groupBy);                
        if (!StringUtils.isEmpty(orderBy))
            r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(aggregateBy))
            r = r.queryParam("aggregate_by", aggregateBy);
        if (!StringUtils.isEmpty(dateRange))
            r = r.queryParam("date_range", dateRange);
        if (!StringUtils.isEmpty(limit))
            r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
            r = r.queryParam("offset", offset);
        
        InputStream response = r.get(InputStream.class);

        return response;
    }

    /**
     * List the measurement data for a given record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:measurement-list}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param labCode The identifier corresponding to the measurement being made.
     * @param status The account or document status to filter by
     * @param fieldName See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param fieldValue See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param dateGroup See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param groupBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param aggregateBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param dateRange See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return a list of measurements
     * Example Return Value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <DateRange value="date_measured*1995-03-10T00:00:00Z*" />
     *     <Filters>
     *       <Filter name="lab_type" value="hematology"/>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *       <Document id="261ca370-927f-41af-b001-7b615c7a468e" type="http://indivo.org/vocab/xml/documents#Measurement" size="1653" digest="0799971784e5a2d199cd6585415a8cd57f7bf9e4f8c8f74ef67a1009a1481cd6" record_id="">
     *         <createdAt>2011-05-02T17:48:13Z</createdAt>
     *         <creator id="mymail@mail.ma" type="Account">
     *           <fullname>full name</fullname>
     *         </creator>
     *         <original id="261ca370-927f-41af-b001-7b615c7a468e"/>
     *         <label>testing</label>
     *         <status>active</status>
     *         <nevershare>false</nevershare>
     *       </Document>
     *     </Meta>
     *     <Item>
     *       <Measurement id="1234" value="120" type="blood pressure systolic" datetime="2011-03-02T00:00:00Z" unit="mmHg" source_doc="3456" />
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @Processor
    public InputStream measurementList(String recordId, 
                                       String labCode,
                                          @Optional String status,
                                          @Optional String fieldName,
                                          @Optional String fieldValue,                                          
                                          @Optional String dateGroup,
                                          @Optional String groupBy,
                                          @Optional String orderBy,
                                          @Optional String aggregateBy,
                                          @Optional String dateRange,
                                          @Optional String limit,
                                          @Optional String offset) throws Exception
    {
        final String apiUrl = getApiUrl("records/" + recordId + "/reports/minimal/measurements/" + labCode);

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        
        /*
        Query Parameters:

        status Ð The account or document status to filter by
        {FIELD} Ð See Query Operators, Valid Query Fields
        date_group Ð See Query Operators
        group_by Ð See Query Operators
        order_by Ð See Query Operators
        aggregate_by Ð See Query Operators
        date_range Ð See Query Operators
        limit Ð See Query Operators
        offset Ð See Query Operators
         */

        if (!StringUtils.isEmpty(status))
            r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(fieldName) && !StringUtils.isEmpty(fieldValue))
            r = r.queryParam(fieldName, fieldValue);
        if (!StringUtils.isEmpty(dateGroup))
            r = r.queryParam("date_group", dateGroup);
        if (!StringUtils.isEmpty(groupBy))
            r = r.queryParam("group_by", groupBy);                
        if (!StringUtils.isEmpty(orderBy))
            r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(aggregateBy))
            r = r.queryParam("aggregate_by", aggregateBy);
        if (!StringUtils.isEmpty(dateRange))
            r = r.queryParam("date_range", dateRange);
        if (!StringUtils.isEmpty(limit))
            r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
            r = r.queryParam("offset", offset);
        
        InputStream response = r.get(InputStream.class);

        return response;
    }
    
    /**
     * List the procedure data for a given record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:procedure-list}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param status The account or document status to filter by
     * @param fieldName See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param fieldValue See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param dateGroup See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param groupBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param aggregateBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param dateRange See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return a list of procedures
     * Example Return Value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <DateRange value="date_measured*1995-03-10T00:00:00Z*" />
     *     <Filters>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *       <Document id="261ca370-927f-41af-b001-7b615c7a468e" type="http://indivo.org/vocab/xml/documents#Procedure" size="1653" digest="0799971784e5a2d199cd6585415a8cd57f7bf9e4f8c8f74ef67a1009a1481cd6" record_id="">
     *         <createdAt>2011-05-02T17:48:13Z</createdAt>
     *         <creator id="mymail@mail.ma" type="Account">
     *           <fullname>full name</fullname>
     *         </creator>
     *         <original id="261ca370-927f-41af-b001-7b615c7a468e"/>
     *         <label>testing</label>
     *         <status>active</status>
     *         <nevershare>false</nevershare>
     *       </Document>
     *     </Meta>
     *     <Item>
     *       <Procedure xmlns="http://indivo.org/vocab/xml/documents#">
     *         <datePerformed>2009-05-16T12:00:00</datePerformed>
     *         <name type="http://codes.indivo.org/procedures#" value="85" abbrev="append">Appendectomy</name>
     *         <provider>
     *           <name>Kenneth Mandl</name>
     *           <institution>Children's Hospital Boston</institution>
     *         </provider>
     *       </Procedure>
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @Processor
    public InputStream procedureList(String recordId, 
                                          @Optional String status,
                                          @Optional String fieldName,
                                          @Optional String fieldValue,                                          
                                          @Optional String dateGroup,
                                          @Optional String groupBy,
                                          @Optional String orderBy,
                                          @Optional String aggregateBy,
                                          @Optional String dateRange,
                                          @Optional String limit,
                                          @Optional String offset) throws Exception
    {
        final String apiUrl = getApiUrl("records/" + recordId + "/reports/minimal/procedures/");

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        
        /*
        Query Parameters:

        status Ð The account or document status to filter by
        {FIELD} Ð See Query Operators, Valid Query Fields
        date_group Ð See Query Operators
        group_by Ð See Query Operators
        order_by Ð See Query Operators
        aggregate_by Ð See Query Operators
        date_range Ð See Query Operators
        limit Ð See Query Operators
        offset Ð See Query Operators
         */

        if (!StringUtils.isEmpty(status))
            r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(fieldName) && !StringUtils.isEmpty(fieldValue))
            r = r.queryParam(fieldName, fieldValue);
        if (!StringUtils.isEmpty(dateGroup))
            r = r.queryParam("date_group", dateGroup);
        if (!StringUtils.isEmpty(groupBy))
            r = r.queryParam("group_by", groupBy);                
        if (!StringUtils.isEmpty(orderBy))
            r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(aggregateBy))
            r = r.queryParam("aggregate_by", aggregateBy);
        if (!StringUtils.isEmpty(dateRange))
            r = r.queryParam("date_range", dateRange);
        if (!StringUtils.isEmpty(limit))
            r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
            r = r.queryParam("offset", offset);
        
        InputStream response = r.get(InputStream.class);

        return response;
    }
    
    /**
     * List the simple_clinical_notes data for a given record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:simple-clinical-notes-list}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param status The account or document status to filter by
     * @param fieldName See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param fieldValue See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param dateGroup See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param groupBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param aggregateBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param dateRange See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return a list of notes
     * Example Return Value:
     * 
     * <Reports xmlns="http://indivo.org/vocab/xml/documents#">
     *   <Summary total_document_count="2" limit="100" offset="0" order_by="date_measured" />
     *   <QueryParams>
     *     <DateRange value="date_measured*1995-03-10T00:00:00Z*" />
     *     <Filters>
     *     </Filters>
     *   </QueryParams>
     *   <Report>
     *     <Meta>
     *       <Document id="261ca370-927f-41af-b001-7b615c7a468e" type="http://indivo.org/vocab/xml/documents#SimpleClinicalNote" size="1653" digest="0799971784e5a2d199cd6585415a8cd57f7bf9e4f8c8f74ef67a1009a1481cd6" record_id="">
     *         <createdAt>2011-05-02T17:48:13Z</createdAt>
     *         <creator id="mymail@mail.ma" type="Account">
     *           <fullname>full name</fullname>
     *         </creator>
     *         <original id="261ca370-927f-41af-b001-7b615c7a468e"/>
     *         <label>testing</label>
     *         <status>active</status>
     *         <nevershare>false</nevershare>
     *       </Document>
     *     </Meta>
     *     <Item>
     *       <SimpleClinicalNote xmlns="http://indivo.org/vocab/xml/documents#">
     *         <dateOfVisit>2010-02-02T12:00:00Z</dateOfVisit>
     *         <finalizedAt>2010-02-03T13:12:00Z</finalizedAt>
     *         <visitType type="http://codes.indivo.org/visit-types#" value="acute">Acute Care</visitType>
     *         <visitLocation>Longfellow Medical</visitLocation>
     *         <specialty type="http://codes.indivo.org/specialties#" value="hem-onc">Hematology/Oncology</specialty>
     * 
     *         <signature>
     *          <at>2010-02-03T13:12:00Z</at>
     *           <provider>
     *             <name>Kenneth Mandl</name>
     *             <institution>Children's Hospital Boston</institution>
     *           </provider>
     *         </signature>
     * 
     *         <signature>
     *           <provider>
     *             <name>Isaac Kohane</name>
     *             <institution>Children's Hospital Boston</institution>
     *           </provider>
     *         </signature>
     * 
     *         <chiefComplaint>stomach ache</chiefComplaint>
     *         <content>Patient presents with ... </content>
     *       </SimpleClinicalNote>
     *     </Item>
     *   </Report>
     * 
     *   ...
     * 
     * </Reports>
     */
    @Processor
    public InputStream simpleClinicalNotesList(String recordId, 
                                          @Optional String status,
                                          @Optional String fieldName,
                                          @Optional String fieldValue,                                          
                                          @Optional String dateGroup,
                                          @Optional String groupBy,
                                          @Optional String orderBy,
                                          @Optional String aggregateBy,
                                          @Optional String dateRange,
                                          @Optional String limit,
                                          @Optional String offset) throws Exception
    {
        final String apiUrl = getApiUrl("records/" + recordId + "/reports/minimal/simple-clinical-notes/");

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        
        /*
        Query Parameters:

        status Ð The account or document status to filter by
        {FIELD} Ð See Query Operators, Valid Query Fields
        date_group Ð See Query Operators
        group_by Ð See Query Operators
        order_by Ð See Query Operators
        aggregate_by Ð See Query Operators
        date_range Ð See Query Operators
        limit Ð See Query Operators
        offset Ð See Query Operators
         */

        if (!StringUtils.isEmpty(status))
            r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(fieldName) && !StringUtils.isEmpty(fieldValue))
            r = r.queryParam(fieldName, fieldValue);
        if (!StringUtils.isEmpty(dateGroup))
            r = r.queryParam("date_group", dateGroup);
        if (!StringUtils.isEmpty(groupBy))
            r = r.queryParam("group_by", groupBy);                
        if (!StringUtils.isEmpty(orderBy))
            r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(aggregateBy))
            r = r.queryParam("aggregate_by", aggregateBy);
        if (!StringUtils.isEmpty(dateRange))
            r = r.queryParam("date_range", dateRange);
        if (!StringUtils.isEmpty(limit))
            r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
            r = r.queryParam("offset", offset);
        
        InputStream response = r.get(InputStream.class);

        return response;
    }
    
    /**
     * List the Model data for a given record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:generic-list}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param dataModel The name of the data model to report on
     * @param status The account or document status to filter by
     * @param fieldName See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param fieldValue See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators), Valid Query Fields (http://indivo-x.readthedocs.org/en/latest/query-api.html#valid-query-fields)
     * @param dateGroup See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param groupBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param orderBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param aggregateBy See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param dateRange See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param limit See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators)
     * @param offset See Query Operators (http://docs.indivohealth.org/en/v2.0.0/query-api.html#query-operators) 
     * @param responseFormat one of json (SDMJ), or xml (SDMX). Default is xml
     * 
     * @throws java.lang.Exception if not successful
     * 
     * @return a list of notes
     * Example Return Value:
     * 
     * SDMJ Example:
     * 
     *    {
     *     "__modelname__": "TestMedication",
     *     "__documentid__": "b1d83191-6edd-4aad-be4e-63117cd4c660",
     *     "name": "ibuprofen",
     *     "date_started": "2010-10-01T00:00:00Z",
     *     "date_stopped": "2010-10-31T00:00:00Z",
     *     "brand_name": "Advil",
     *     "prescription": {
     *         "__modelname__": "TestPrescription",
     *         "__documentid__": "b1d83191-6edd-4aad-be4e-63117cd4c660",
     *         "prescribed_by_name": "Kenneth D. Mandl",
     *         "prescribed_by_institution": "Children's Hospital Boston",
     *         "prescribed_on": "2010-09-30T00:00:00Z",
     *         "prescribed_stop_on": "2010-10-31T00:00:00Z"
     *     },
     *     "fills": [
     *         {
     *             "__modelname__": "TestFill",
     *             "__documentid__": "b1d83191-6edd-4aad-be4e-63117cd4c660",
     *             "date_filled": "2010-10-01T00:00:00Z",
     *             "supply_days": "15",
     *             "filled_at_name": "CVS"
     *         },
     *         {
     *             "__modelname__": "TestFill",
     *             "__documentid__": "b1d83191-6edd-4aad-be4e-63117cd4c660",
     *             "date_filled": "2010-10-16T00:00:00Z",
     *             "supply_days": "15",
     *             "filled_at_name": "CVS"
     *         }
     *     ]
     * }
     * 
     * SDMX Example:
     * 
     * <Models>
     *   <Model name="TestMedication" documentId="b1d83191-6edd-4aad-be4e-63117cd4c660">
     *     <Field name="date_started">2010-10-01T00:00:00Z</Field>
     *     <Field name="name">ibuprofen</Field>
     *     <Field name="brand_name">Advil</Field>
     *     <Field name="date_stopped">2010-10-31T00:00:00Z</Field>
     *     <Field name="prescription">
     *       <Model name="TestPrescription"  documentId="b1d83191-6edd-4aad-be4e-63117cd4c660">
     *         <Field name="prescribed_by_name">Kenneth D. Mandl</Field>
     *         <Field name="prescribed_by_institution">Children's Hospital Boston</Field>
     *         <Field name="prescribed_on">2010-09-30T00:00:00Z</Field>
     *         <Field name="prescribed_stop_on">2010-10-31T00:00:00Z</Field>
     *       </Model>
     *     </Field>
     *     <Field name="fills">
     *       <Models>
     *         <Model name="TestFill"  documentId="b1d83191-6edd-4aad-be4e-63117cd4c660">
     *           <Field name="date_filled">2010-10-01T00:00:00Z</Field>
     *           <Field name="supply_days">15</Field>
     *           <Field name="filled_at_name">CVS</Field>
     *         </Model>
     *         <Model name="TestFill"  documentId="b1d83191-6edd-4aad-be4e-63117cd4c660">
     *           <Field name="date_filled">2010-10-16T00:00:00Z</Field>
     *           <Field name="supply_days">15</Field>
     *           <Field name="filled_at_name">CVS</Field>
     *         </Model>
     *       </Models>
     *     </Field>
     *   </Model>
     * </Models>
     */
    @Processor
    public InputStream genericList(String recordId, 
                                   String dataModel, 
                                          @Optional String status,
                                          @Optional String fieldName,
                                          @Optional String fieldValue,                                          
                                          @Optional String dateGroup,
                                          @Optional String groupBy,
                                          @Optional String orderBy,
                                          @Optional String aggregateBy,
                                          @Optional String dateRange,
                                          @Optional String limit,
                                          @Optional String offset,
                                          @Optional @Default("xml") GenericResponseFormat responseFormat) throws Exception
    {
        final String apiUrl = getApiUrl("records/" + recordId + "/reports/" + dataModel + "/");

        WebResource r = getResource(apiUrl, accessToken, accessTokenSecret);        
        
        /*
        Query Parameters:

        status Ð The account or document status to filter by
        {FIELD} Ð See Query Operators, Valid Query Fields
        date_group Ð See Query Operators
        group_by Ð See Query Operators
        order_by Ð See Query Operators
        aggregate_by Ð See Query Operators
        date_range Ð See Query Operators
        limit Ð See Query Operators
        offset Ð See Query Operators
         */

        if (!StringUtils.isEmpty(status))
            r = r.queryParam("status", status);
        if (!StringUtils.isEmpty(fieldName) && !StringUtils.isEmpty(fieldValue))
            r = r.queryParam(fieldName, fieldValue);
        if (!StringUtils.isEmpty(dateGroup))
            r = r.queryParam("date_group", dateGroup);
        if (!StringUtils.isEmpty(groupBy))
            r = r.queryParam("group_by", groupBy);                
        if (!StringUtils.isEmpty(orderBy))
            r = r.queryParam("order_by", orderBy);
        if (!StringUtils.isEmpty(aggregateBy))
            r = r.queryParam("aggregate_by", aggregateBy);
        if (!StringUtils.isEmpty(dateRange))
            r = r.queryParam("date_range", dateRange);
        if (!StringUtils.isEmpty(limit))
            r = r.queryParam("limit", limit);
        if (!StringUtils.isEmpty(offset))
            r = r.queryParam("offset", offset);
        
        r = r.queryParam("response_format", responseFormat.getGenericResponseFormat());
        
        InputStream response = r.get(InputStream.class);

        return response;
    }
     
    /**
     * List the shares of a record.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-shares}
     *
     * @param recordId The id string associated with the Indivo record
     * 
     * @throws IOException if not successful
     * 
     * @return list of shares.
     * 
     * Example Return Value:
     * <Shares record="123">
     *   <Share id="678" account="joeuser@example.com" />
     *   <Share id="789" pha="problems@apps.indivo.org" />
     * 
     *   ...
     * 
     * </Shares>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/shares/",
            method = HttpMethod.GET,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordShares(@RestUriParam("record_id") String recordId) throws IOException;        
    
    /**
     * Fully share a record with another account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-share-add}
     *
     * @param recordId The id string associated with the Indivo record
     * @param accountId The email address of the recipient account. REQUIRED.
     * @param roleLabel A label for the share, usually the relationship between the owner and the recipient (i.e. Guardian). OPTIONAL.
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful.
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/shares/",
            method = HttpMethod.POST, contentType="application/x-www-form-urlencoded",
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordShareAdd(@RestUriParam("record_id") String recordId,
            @RestPostParam("account_id") String accountId,
            @RestPostParam("roleLabel") @Optional String roleLabel) throws IOException;        

    /**
     * Undo a full record share with an account.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:record-share-delete}
     *
     * @param recordId The id string associated with the Indivo record
     * @param otherAccountId The email identifier of the Indivo account to share with
     * 
     * @throws IOException if not successful
     * 
     * @return <ok/> if successful.
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/shares/{other_account_id}",
            method = HttpMethod.DELETE,
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String recordShareDelete(@RestUriParam("record_id") String recordId,
            @RestUriParam("other_account_id") String otherAccountId) throws IOException;        
    
    //======================== SMART ==============================================//-
    
    /**
     * SMART Capabilities [SMART-COMPATIBLE]
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:smart-capabilities}
     * 
     *  
     * @throws IOException if not successful
     * 
     * @return JSON formatted SMART capabilities
     * Example Return Value:
     * {
     *     "http://smartplatforms.org/terms#Demographics": {
     *         "methods": [
     *             "GET"
     *         ]
     *     },
     *     "http://smartplatforms.org/terms#Encounter": {
     *         "methods": [
     *             "GET"
     *         ]
     *     },
     *     "http://smartplatforms.org/terms#VitalSigns": {
     *         "methods": [
     *             "GET"
     *         ]
     *     }
     * }
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/capabilities/", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String smartCapabilities() throws IOException;

    /**
     * Fetch the SMART ontology as RDF/XML.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:smart-ontology}
     * 
     * 
     * @throws IOException if not successful
     * 
     * @return An OWL file describing the SMART ontology.
     * Example Return Value - see http://sandbox-api.smartplatforms.org/ontology
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/ontology", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String smartOntology() throws IOException;
    
    /**
     * SMART allergy list, serialized as RDF/XML.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:smart-allergies}
     * 
     * @param recordId The id string associated with the Indivo record
     * 
     * @throws IOException if not successful
     * 
     * @return SMART RDF describing the recordÕs allergies and allergy exclusions
     * Example Return Value:
     * 
     * <?xml version="1.0" encoding="UTF-8"?>
     * <rdf:RDF
     *    xmlns:dcterms="http://purl.org/dc/terms/"
     *    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     *    xmlns:sp="http://smartplatforms.org/terms#">
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/271807003">
     *     <dcterms:title>skin rash</dcterms:title>
     *     <dcterms:identifier>271807003</dcterms:identifier>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/SNOMED"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://indivo.org/records/03059111-af61-4834-8234-befe5f5a2532/allergies/f8efc96a-7677-4b4f-9879-7fc6d6488d0b">
     *     <sp:category rdf:nodeID="_865481f6-03ca-4707-8a89-ec468952efa5"/>
     *     <sp:severity rdf:nodeID="_9f6a6981-1173-4041-8fa3-4462238ab8ae"/>
     *     <sp:foodAllergen rdf:nodeID="_24be52e0-51a4-4d00-9654-25ae9e0ad2f4"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Allergy"/>
     *     <sp:belongsTo rdf:nodeID="_f63e49ae-5071-4f99-a62d-329a2e23ce85"/>
     *     <sp:allergicReaction rdf:nodeID="_7912ae70-da78-443f-a0b6-3f955b9e140a"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_865481f6-03ca-4707-8a89-ec468952efa5">
     *     <dcterms:title>food allergy</dcterms:title>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/414285001"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_e6301747-0618-4a74-9b52-d7b5f3745463">
     *     <dcterms:title>drug allergy</dcterms:title>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/416098002"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_b8361d90-8b1e-40cb-b892-80dcb4301d90">
     *     <dcterms:title>mild</dcterms:title>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/255604002"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/414285001">
     *     <dcterms:title>food allergy</dcterms:title>
     *     <dcterms:identifier>414285001</dcterms:identifier>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/AllergyCategory"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_7912ae70-da78-443f-a0b6-3f955b9e140a">
     *     <dcterms:title>anaphylaxis</dcterms:title>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/39579001"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_9f6a6981-1173-4041-8fa3-4462238ab8ae">
     *     <dcterms:title>severe</dcterms:title>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/24484000"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/416098002">
     *     <dcterms:title>drug allergy</dcterms:title>
     *     <dcterms:identifier>416098002</dcterms:identifier>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/AllergyCategory"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_2c0973ad-d7fd-4e7f-a6c2-5c625a54aea7">
     *     <dcterms:title>skin rash</dcterms:title>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/271807003"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://indivo.org/records/03059111-af61-4834-8234-befe5f5a2532/allergies/a4abf13b-ec73-4ae4-b0a2-9d71ab2ea368">
     *     <sp:drugClassAllergen rdf:nodeID="_f06759ab-6668-4832-97da-0794d244d403"/>
     *     <sp:category rdf:nodeID="_e6301747-0618-4a74-9b52-d7b5f3745463"/>
     *     <sp:severity rdf:nodeID="_b8361d90-8b1e-40cb-b892-80dcb4301d90"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Allergy"/>
     *     <sp:belongsTo rdf:nodeID="_f63e49ae-5071-4f99-a62d-329a2e23ce85"/>
     *     <sp:allergicReaction rdf:nodeID="_2c0973ad-d7fd-4e7f-a6c2-5c625a54aea7"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/39579001">
     *     <dcterms:title>anaphylaxis</dcterms:title>
     *     <dcterms:identifier>39579001</dcterms:identifier>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/SNOMED"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/255604002">
     *     <dcterms:title>mild</dcterms:title>
     *     <dcterms:identifier>255604002</dcterms:identifier>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/AllergySeverity"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_24be52e0-51a4-4d00-9654-25ae9e0ad2f4">
     *     <dcterms:title>peanut</dcterms:title>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *     <sp:code rdf:resource="http://fda.gov/UNII/QE1QX6B99R"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/NDFRT/N0000175503">
     *     <dcterms:title>sulfonamide antibacterial</dcterms:title>
     *     <dcterms:identifier>N0000175503</dcterms:identifier>
     *     <sp:system>http://purl.bioontology.org/ontology/NDFRT/</sp:system>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/NDFRT"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_f06759ab-6668-4832-97da-0794d244d403">
     *     <dcterms:title>sulfonamide antibacterial</dcterms:title>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/NDFRT/N0000175503"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_f63e49ae-5071-4f99-a62d-329a2e23ce85">
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#MedicalRecord"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://fda.gov/UNII/QE1QX6B99R">
     *     <dcterms:title>peanut</dcterms:title>
     *     <dcterms:identifier>QE1QX6B99R</dcterms:identifier>
     *     <sp:system>http://fda.gov/UNII/</sp:system>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/UNII"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/24484000">
     *     <dcterms:title>severe</dcterms:title>
     *     <dcterms:identifier>24484000</dcterms:identifier>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/AllergySeverity"/>
     *   </rdf:Description>
     * </rdf:RDF>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/allergies/", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String smartAllergies(@RestUriParam("record_id") String recordId) throws IOException;

    /**
     * Retrieve a specific instance of a SMART Allergy/AllergyExclusion
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:smart-allergies-instance}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param modelId The id of the Allergy/AllergyExclusion
     * 
     * @throws IOException if not successful
     * 
     * @return SMART RDF describing the AllergyAllergyExclusion
     * Example Return Value:
     * 
     * <?xml version="1.0" encoding="UTF-8"?>
     * <rdf:RDF
     * xmlns:dcterms="http://purl.org/dc/terms/"
     * xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     * xmlns:sp="http://smartplatforms.org/terms#">
     *     <rdf:Description rdf:nodeID="_9ea3b5f3-c0c4-40d7-a370-2ab475ea1d6e">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *         <sp:code rdf:resource="http://purl.bioontology.org/ontology/NDFRT/N0000175503"/>
     *         <dcterms:title>Sulfonamide Antibacterial</dcterms:title>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/416098002">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/AllergyCategory"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *         <dcterms:identifier>416098002</dcterms:identifier>
     *         <dcterms:title>Drug allergy</dcterms:title>
     *         <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/24484000">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/AllergySeverity"/>
     *         <dcterms:identifier>24484000</dcterms:identifier>
     *         <dcterms:title>Severe</dcterms:title>
     *         <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/39579001">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/SNOMED"/>
     *         <dcterms:identifier>39579001</dcterms:identifier>
     *         <dcterms:title>Anaphylaxis</dcterms:title>
     *         <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://indivo.org/records/b171cd33-00a6-4038-976d-b8380c276ba1/allergies/09eadb0d-9c58-4cac-aad5-c84c29caf5bd">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Allergy"/>
     *         <sp:allergicReaction rdf:nodeID="_6538190b-0659-4710-b083-fe3f0462242b"/>
     *         <sp:category rdf:nodeID="_3572cdcd-7787-4801-b6b3-e153794ace84"/>
     *         <sp:drugClassAllergen rdf:nodeID="_9ea3b5f3-c0c4-40d7-a370-2ab475ea1d6e"/>
     *         <sp:severity rdf:nodeID="_e62b76fe-e33b-4d9f-9a2b-dc1221e3eb17"/>
     *         <sp:belongsTo rdf:resource="http://indivo.org/records/b171cd33-00a6-4038-976d-b8380c276ba1"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_6538190b-0659-4710-b083-fe3f0462242b">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *         <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/39579001"/>
     *         <dcterms:title>Anaphylaxis</dcterms:title>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_e62b76fe-e33b-4d9f-9a2b-dc1221e3eb17">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *         <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/24484000"/>
     *         <dcterms:title>Severe</dcterms:title>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_3572cdcd-7787-4801-b6b3-e153794ace84">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *         <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/416098002"/>
     *         <dcterms:title>Drug allergy</dcterms:title>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://purl.bioontology.org/ontology/NDFRT/N0000175503">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/NDFRT"/>
     *         <dcterms:identifier>N0000175503</dcterms:identifier>
     *         <dcterms:title>Sulfonamide Antibacterial</dcterms:title>
     *         <sp:system>http://purl.bioontology.org/ontology/NDFRT/</sp:system>
     *     </rdf:Description>
     * </rdf:RDF>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/allergies/{model_id}", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String smartAllergiesInstance(@RestUriParam("record_id") String recordId,
            @RestUriParam("model_id") String modelId) throws IOException;

    /**
     * SMART-compatible alias for the generic list view: returns data_models serialized as SMART RDF.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:smart-generic}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param modelName The name of the SMART data_model to retrieve (i.e. problems). Options are defined by the SMART API.
     * 
     * @throws IOException if not successful
     * 
     * @return SMART RDF/XML for all items matching MODEL_NAME belonging to the record.
     * 
     * Example Return Value:
     * <?xml version="1.0" encoding="UTF-8"?>
     * <rdf:RDF
     *    xmlns:dcterms="http://purl.org/dc/terms/"
     *    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     *    xmlns:sp="http://smartplatforms.org/terms#"
     * >
     *   <rdf:Description rdf:about="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c/problems/03426213-a50b-4df8-8585-e951fad99898">
     *     <sp:endDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2010-09-13T00:00:00</sp:endDate>
     *     <sp:problemName rdf:nodeID="_93f4ebe0-e5dd-4b45-80c1-a1b118871457"/>
     *     <sp:startDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2007-06-02T00:00:00</sp:startDate>
     *     <sp:belongsTo rdf:resource="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Problem"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_8e568a92-ab2c-4400-902f-5aa5685b0bdf">
     *     <dcterms:title>Hyperlipidemia</dcterms:title>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/55822004"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c/problems/651c297e-364c-4df8-b22d-280fd805d1fa">
     *     <sp:endDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2010-09-13T00:00:00</sp:endDate>
     *     <sp:problemName rdf:nodeID="_ec4d16cf-1f3d-4463-9872-d4494cf44327"/>
     *     <sp:startDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2007-01-22T00:00:00</sp:startDate>
     *     <sp:belongsTo rdf:resource="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Problem"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/165084003">
     *     <dcterms:title>Clinical finding</dcterms:title>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <dcterms:identifier>165084003</dcterms:identifier>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/SNOMED"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c/problems/5fb3e8e1-e65f-42f3-bc52-cd4040dbeca8">
     *     <sp:endDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2010-09-13T00:00:00</sp:endDate>
     *     <sp:problemName rdf:nodeID="_46c3aa8e-bc89-4012-8aa2-f1aadee29aac"/>
     *     <sp:startDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2007-09-26T00:00:00</sp:startDate>
     *     <sp:belongsTo rdf:resource="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Problem"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_93f4ebe0-e5dd-4b45-80c1-a1b118871457">
     *     <dcterms:title>Chronic non-suppurative otitis media</dcterms:title>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/21186006"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/82271004">
     *     <dcterms:title>Injury of head</dcterms:title>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <dcterms:identifier>82271004</dcterms:identifier>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/SNOMED"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c/problems/8e474cad-c6b2-46d9-853d-10a02d84ed16">
     *     <sp:endDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2010-09-13T00:00:00</sp:endDate>
     *     <sp:problemName rdf:nodeID="_5602c2a0-875e-48ee-b6fb-350a32aeb39c"/>
     *     <sp:startDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2007-01-28T00:00:00</sp:startDate>
     *     <sp:belongsTo rdf:resource="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Problem"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c">
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#MedicalRecord"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/399963005">
     *     <dcterms:title>Abrasion or friction burn of other, multiple, and unspecified sites, without mention of infection</dcterms:title>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <dcterms:identifier>399963005</dcterms:identifier>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/SNOMED"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/21186006">
     *     <dcterms:title>Chronic non-suppurative otitis media</dcterms:title>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <dcterms:identifier>21186006</dcterms:identifier>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/SNOMED"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c/problems/7c885267-4a2b-49e8-bee3-c3aaef1512e3">
     *     <sp:endDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2010-09-13T00:00:00</sp:endDate>
     *     <sp:problemName rdf:nodeID="_8e568a92-ab2c-4400-902f-5aa5685b0bdf"/>
     *     <sp:startDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2004-09-20T00:00:00</sp:startDate>
     *     <sp:belongsTo rdf:resource="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Problem"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_46c3aa8e-bc89-4012-8aa2-f1aadee29aac">
     *     <dcterms:title>Acute bronchitis</dcterms:title>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/10509002"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/34649000">
     *     <dcterms:title>Closed fracture of malar AND/OR maxillary bones</dcterms:title>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <dcterms:identifier>34649000</dcterms:identifier>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/SNOMED"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_5602c2a0-875e-48ee-b6fb-350a32aeb39c">
     *     <dcterms:title>Closed fracture of malar AND/OR maxillary bones</dcterms:title>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/34649000"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c/problems/c9708111-36d1-4255-84bc-6c4819864e00">
     *     <sp:endDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2010-09-13T00:00:00</sp:endDate>
     *     <sp:problemName rdf:nodeID="_f60a3485-ba2c-4f11-9e73-2af6b0621904"/>
     *     <sp:startDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2007-01-22T00:00:00</sp:startDate>
     *     <sp:belongsTo rdf:resource="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Problem"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_f0fde196-8295-4cd6-b2ee-b08e39832e63">
     *     <dcterms:title>Clinical finding</dcterms:title>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/165084003"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_f60a3485-ba2c-4f11-9e73-2af6b0621904">
     *     <dcterms:title>Injury of head</dcterms:title>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/82271004"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:nodeID="_ec4d16cf-1f3d-4463-9872-d4494cf44327">
     *     <dcterms:title>Abrasion or friction burn of other, multiple, and unspecified sites, without mention of infection</dcterms:title>
     *     <sp:code rdf:resource="http://purl.bioontology.org/ontology/SNOMEDCT/399963005"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/10509002">
     *     <dcterms:title>Acute bronchitis</dcterms:title>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <dcterms:identifier>10509002</dcterms:identifier>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/SNOMED"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c/problems/bbd612b9-3a47-4d62-b913-5cab6d8cc8cf">
     *     <sp:endDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2010-09-13T00:00:00</sp:endDate>
     *     <sp:problemName rdf:nodeID="_f0fde196-8295-4cd6-b2ee-b08e39832e63"/>
     *     <sp:startDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2004-09-20T00:00:00</sp:startDate>
     *     <sp:belongsTo rdf:resource="http://indivo.org/records/8f5fb6c3-e065-41db-9be2-0c1fa4a97e2c"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Problem"/>
     *   </rdf:Description>
     *   <rdf:Description rdf:about="http://purl.bioontology.org/ontology/SNOMEDCT/55822004">
     *     <dcterms:title>Hyperlipidemia</dcterms:title>
     *     <sp:system>http://purl.bioontology.org/ontology/SNOMEDCT/</sp:system>
     *     <dcterms:identifier>55822004</dcterms:identifier>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *     <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/SNOMED"/>
     *   </rdf:Description>
     * </rdf:RDF>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/{model_name}", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String smartGeneric(@RestUriParam("record_id") String recordId,
            @RestUriParam("model_name") String modelName) throws IOException;    
    
    /**
     * Retrieve a specific instance of a SMART model.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:smart-generic-instance}
     * 
     * @param recordId The id string associated with the Indivo record
     * @param modelId The id of the SMART data_model to retrieve
     * @param modelName The name of the SMART data_model to retrieve (i.e. problems). Options are defined by the SMART API.
     * 
     * @throws IOException if not successful
     * 
     * @return SMART RDF/XML for the item matching MODEL_NAME and MODEL_ID belonging to the record.
     * 
     * Example Return Value:
     * <?xml version="1.0" encoding="UTF-8"?>
     * <rdf:RDF
     * xmlns:dcterms="http://purl.org/dc/terms/"
     * xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     * xmlns:sp="http://smartplatforms.org/terms#"
     * xmlns:v="http://www.w3.org/2006/vcard/ns#"
     * >
     *     <rdf:Description rdf:about="http://smartplatforms.org/terms/codes/LabResultInterpretation#normal">
     *         <sp:system>http://smartplatforms.org/terms/codes/LabResultInterpretation#</sp:system>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/LabResultInterpretation"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *         <dcterms:title>Normal</dcterms:title>
     *         <dcterms:identifier>normal</dcterms:identifier>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_16d04766-09ab-4a14-847b-c2cc2aa90544">
     *         <sp:unit>mEq/L</sp:unit>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#ValueAndUnit"/>
     *         <sp:value>120</sp:value>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_dc97d85d-c1fd-4996-980a-f2b37195c00a">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *         <dcterms:title>Serum Sodium</dcterms:title>
     *         <sp:code rdf:resource="http://purl.bioontology.org/ontology/LNC/2951-2"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_83b7740f-b37b-40be-8d78-99e80de40790">
     *         <sp:person rdf:nodeID="_fb3f9793-c486-40af-8be1-54b8105355c9"/>
     *         <sp:role>Lab Specialist</sp:role>
     *         <sp:organization rdf:nodeID="_679ad47e-94ca-4dc6-96ed-168ca03610b8"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Participant"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_372b5eab-eb4d-4d1f-b131-f6f7a8d82d7f">
     *         <sp:maximum rdf:nodeID="_ce2e6286-ba4a-4c96-b686-3896189e468e"/>
     *         <sp:minimum rdf:nodeID="_ce2e6286-ba4a-4c96-b686-3896189e468e"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#ValueRange"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_ce2e6286-ba4a-4c96-b686-3896189e468e">
     *         <sp:unit>mEq/L</sp:unit>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#ValueAndUnit"/>
     *         <sp:value>135</sp:value>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_716ae160-84dd-4f9e-b035-bd3b26b625dd">
     *         <sp:unit>mEq/L</sp:unit>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#ValueAndUnit"/>
     *         <sp:value>140</sp:value>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_6fa51a50-1bdc-43b9-8be3-cbe828fab220">
     *         <sp:normalRange rdf:nodeID="_372b5eab-eb4d-4d1f-b131-f6f7a8d82d7f"/>
     *         <sp:nonCriticalRange rdf:nodeID="_e60921df-5c19-4a7f-b0c3-acaf46ff81d2"/>
     *         <sp:valueAndUnit rdf:nodeID="_716ae160-84dd-4f9e-b035-bd3b26b625dd"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#QuantitativeResult"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_7e185aa4-7394-4cce-b107-d3a2ef01318c">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *         <dcterms:title>Final results: complete and verified</dcterms:title>
     *         <sp:code rdf:resource="http://smartplatforms.org/terms/codes/LabStatus#final"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_c2141794-697e-4917-8cb2-eefc7d612f1a">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#CodedValue"/>
     *         <dcterms:title>Normal</dcterms:title>
     *         <sp:code rdf:resource="http://smartplatforms.org/terms/codes/LabResultInterpretation#normal"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_679ad47e-94ca-4dc6-96ed-168ca03610b8">
     *         <v:organization-name>City Lab</v:organization-name>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Organization"/>
     *         <v:adr rdf:nodeID="_660a15ce-8650-4c91-ad1d-cdee3015ea97"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_fb3f9793-c486-40af-8be1-54b8105355c9">
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Person"/>
     *         <v:n rdf:nodeID="_0ac2cdea-f2b3-44c6-b703-284a757111d8"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_660a15ce-8650-4c91-ad1d-cdee3015ea97">
     *         <v:postal-code>11111</v:postal-code>
     *         <v:street-address>20 Elm St</v:street-address>
     *         <v:region>MA</v:region>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Address"/>
     *         <v:locality>Springfield</v:locality>
     *         <v:country>USA</v:country>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://purl.bioontology.org/ontology/LNC/2951-2">
     *         <sp:system>http://purl.bioontology.org/ontology/LNC/</sp:system>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/LOINC"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *         <dcterms:title>Serum Sodium</dcterms:title>
     *         <dcterms:identifier>2951-2</dcterms:identifier>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_d8aacfc9-e1f0-4702-8f8e-c1846c5c214a">
     *         <sp:unit>mEq/L</sp:unit>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#ValueAndUnit"/>
     *         <sp:value>145</sp:value>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_0ac2cdea-f2b3-44c6-b703-284a757111d8">
     *         <v:family-name>Finnialispi</v:family-name>
     *         <rdf:type rdf:resource="http://www.w3.org/2006/vcard/ns#Name"/>
     *         <v:given-name>Tad</v:given-name>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_e60921df-5c19-4a7f-b0c3-acaf46ff81d2">
     *         <sp:maximum rdf:nodeID="_16d04766-09ab-4a14-847b-c2cc2aa90544"/>
     *         <sp:minimum rdf:nodeID="_16d04766-09ab-4a14-847b-c2cc2aa90544"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#ValueRange"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://indivo.org/records/f48030f2-5ed6-4fc0-97b2-a925d7d88d94/lab_results/d2ed9b5e-3eab-4cae-a35c-f5d8ce4c9fff">
     *         <sp:abnormalInterpretation rdf:nodeID="_c2141794-697e-4917-8cb2-eefc7d612f1a"/>
     *         <sp:notes>Blood sample appears to have hemolyzed</sp:notes>
     *         <sp:belongsTo rdf:resource="http://indivo.org/records/f48030f2-5ed6-4fc0-97b2-a925d7d88d94"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#LabResult"/>
     *         <sp:quantitativeResult rdf:nodeID="_6fa51a50-1bdc-43b9-8be3-cbe828fab220"/>
     *         <sp:labName rdf:nodeID="_dc97d85d-c1fd-4996-980a-f2b37195c00a"/>
     *         <sp:accessionNumber>AC09205823577</sp:accessionNumber>
     *         <sp:labStatus rdf:nodeID="_7e185aa4-7394-4cce-b107-d3a2ef01318c"/>
     *         <sp:specimenCollected rdf:nodeID="_0e2687ff-7b32-430e-b04e-d21f334918e4"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:about="http://smartplatforms.org/terms/codes/LabStatus#final">
     *         <sp:system>http://smartplatforms.org/terms/codes/LabStatus#</sp:system>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Code"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms/codes/LabResultStatus"/>
     *         <dcterms:title>Final results: complete and verified</dcterms:title>
     *         <dcterms:identifier>final</dcterms:identifier>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_0e2687ff-7b32-430e-b04e-d21f334918e4">
     *         <sp:startDate rdf:datatype="http://www.w3.org/2001/XMLSchema#dateTime">2010-12-27T17:00:00</sp:startDate>
     *         <sp:participant rdf:nodeID="_83b7740f-b37b-40be-8d78-99e80de40790"/>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#Attribution"/>
     *     </rdf:Description>
     *     <rdf:Description rdf:nodeID="_b5de9335-f855-413c-8544-c80982421244">
     *         <sp:unit>mEq/L</sp:unit>
     *         <rdf:type rdf:resource="http://smartplatforms.org/terms#ValueAndUnit"/>
     *         <sp:value>155</sp:value>
     *     </rdf:Description>
     * </rdf:RDF>
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/records/{record_id}/{model_name}/{model_id}", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String smartGenericInstance(@RestUriParam("record_id") String recordId,
            @RestUriParam("model_name") String modelName,
            @RestUriParam("model_id") String modelId) throws IOException;    
    
    
    /**
     * Return the current version of Indivo.
     *
     * {@sample.xml ../../../doc/Indivo-connector.xml.sample indivo:get-version}
     * 
     * @throws IOException if not successful
     * 
     * @return the current version of Indivo.
     * 
     * Example Return Value:
     * 1.0.0.0
     */
    @OAuthProtected
@Processor
@RestCall(uri = "{protocol}://{server}:{port}/version", 
            method = HttpMethod.GET, 
            exceptions={@RestExceptionOn(expression="#[message.inboundProperties['http.status'] != 200]")})
    public abstract String getVersion() throws IOException;
    
    //--------------------------------------
    
    public String getServer()
    {
        return server;
    }

    public void setServer(String server)
    {
        this.server = server;
    }

    public int getPort()
    {
        return port;
    }

    public void setPort(int port)
    {
        this.port = port;
    }

    public String getAppKey()
    {
        return appKey;
    }

    public void setAppKey(String appKey)
    {
        this.appKey = appKey;
    }

    public String getAppSecret()
    {
        return appSecret;
    }

    public void setAppSecret(String appSecret)
    {
        this.appSecret = appSecret;
    }
    
    public boolean isDebug()
    {
        return debug;
    }

    public void setDebug(boolean debug)
    {
        this.debug = debug;
    }

    public String getAccessToken() {
        return accessToken;
    }

    public void setAccessToken(String accessToken) {
        this.accessToken = accessToken;
    }

    public String getAccessTokenSecret() {
        return accessTokenSecret;
    }

    public void setAccessTokenSecret(String accessTokenSecret) {
        this.accessTokenSecret = accessTokenSecret;
    }

    public String getProtocol() {
        return protocol;
    }

    public void setProtocol(String protocol) {
        this.protocol = protocol;
    }
    
    //--------------------------------------------------
    /**
     * @param path path without leading /
     */
    protected String getApiUrl(String path)
    {
        if (port != 80)
            return String.format("%s://%s:%s/%s", getProtocol(), getServer(), getPort(), path);
        else
            return String.format("%s://%s/%s", getProtocol(), getServer(), path);
    }
    
    protected Client getClient() {
        if (client == null) {
            ClientConfig cc = new DefaultClientConfig();
            cc.getClasses().add(MultiPartWriter.class);//TODO - is this requred?
            client = Client.create(cc); 
        }
        return client;
    }
    
    protected OAuthClientFilter getOAuthClientFilter(String accessToken, String accessTokenSecret) {
        OAuthParameters params = new OAuthParameters()
                .signatureMethod(HMAC_SHA1.NAME)
                .consumerKey(getAppKey())
                .token(accessToken).version();

        OAuthSecrets secrets = new OAuthSecrets()
                .consumerSecret(getAppSecret())
                .tokenSecret(accessTokenSecret);

        OAuthClientFilter filter = new OAuthClientFilter(
                getClient().getProviders(),
                params,
                secrets
        );        
        
        return filter;
    }
    
    protected WebResource getResource(String url, String accessToken, String accessTokenSecret) {
    	WebResource r = getClient().resource(url);

        if (isDebug())
        {
            r.addFilter(new LoggingFilter());
        }
        r.addFilter(getOAuthClientFilter(accessToken, accessTokenSecret));
        
        return r;
    }

    //===============================
    public enum Severity {
    	low ("low"), 
    	medium ("medium"), 
    	high ("high");
    	
    	private final String severity;
    	
    	Severity(String severity) {
    	    this.severity = severity;
    	}

        public String getSeverity() {
            return severity;
        }
    	
        @Override 
        public String toString() {
            return severity;
        }
    }
    public enum BodyType {
    	plaintext ("plaintext"), 
    	markdown ("markdown");
    	
    	private final String bodyType;
    	
    	BodyType(String bodyType) {
    	    this.bodyType = bodyType;
    	}

        public String getBodyType() {
            return bodyType;
        }

        @Override 
        public String toString() {
            return bodyType;
        }
    }
    public enum DemographicsResponseFormat {
        rdfxml ("application/rdf+xml"),
        json ("application/json"),
        xml ("application/xml");
        
        private final String demographicsResponseFormat;
        
        DemographicsResponseFormat(String demographicsResponseFormat) {
            this.demographicsResponseFormat = demographicsResponseFormat;
        }
        
        public String getDemographicsResponseFormat() {
            return demographicsResponseFormat;
        }
        
        @Override 
        public String toString() {
            return demographicsResponseFormat;
        }
        
    }
    public enum GenericResponseFormat {
        json ("application/json"),
        xml ("application/xml");
        
        private final String genericResponseFormat;
        
        GenericResponseFormat(String genericResponseFormat) {
            this.genericResponseFormat = genericResponseFormat;
        }
        
        public String getGenericResponseFormat() {
            return genericResponseFormat;
        }

        @Override 
        public String toString() {
            return genericResponseFormat;
        }
        
    }
    public enum Status {
        Active ("active"), 
        Void ("void"), 
        Archived ("archived");
        
        private final String status;
        
        Status(String status) {
            this.status = status;
        }

        public String getStatus() {
            return status;
        }
        
        @Override 
        public String toString() {
            return status;
        }
    }
    //---------------------------------------------------

}
